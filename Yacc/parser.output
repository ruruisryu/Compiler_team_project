

Terminals which are not used:

   TEIF
   TEOF
   TERROR
   TCOMMENT


Conflict in state 187 between rule 68 and token TELSE resolved as shift.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    function_def -> function_header compound_st
rule 7    function_def -> error compound_st
rule 8    function_header -> dcl_spec function_name formal_param
rule 9    function_prototype -> function_name type_only_param
rule 10   function_prototype -> function_name formal_param
rule 11   type_only_param -> TLPAREN type_only_param_list TRPAREN
rule 12   type_only_param -> TLPAREN type_only_param_list error
rule 13   type_only_param_list -> type_only_param_dcl
rule 14   type_only_param_list -> type_only_param_list TCOMMA type_only_param_dcl
rule 15   type_only_param_list -> type_only_param_list TCOMMA param_dcl
rule 16   type_only_param_list -> formal_param_list TCOMMA type_only_param_dcl
rule 17   type_only_param_dcl -> dcl_specifier
rule 18   dcl_spec -> dcl_specifiers
rule 19   dcl_specifiers -> dcl_specifier
rule 20   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 21   dcl_specifier -> type_qualifier
rule 22   dcl_specifier -> type_specifier
rule 23   type_qualifier -> TCONST
rule 24   type_specifier -> TINT
rule 25   type_specifier -> TFLOAT
rule 26   type_specifier -> TVOID
rule 27   function_name -> TIDENT
rule 28   formal_param -> TLPAREN opt_formal_param TRPAREN
rule 29   formal_param -> TLPAREN opt_formal_param error
rule 30   opt_formal_param -> formal_param_list
rule 31   opt_formal_param ->		/* empty */
rule 32   formal_param_list -> param_dcl
rule 33   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 34   param_dcl -> dcl_specifier declarator
rule 35   param_dcl -> dcl_specifier function_prototype
rule 36   compound_st -> TLBRACE opt_dcl_list opt_stat_list TRBRACE
rule 37   compound_st -> TLBRACE opt_dcl_list opt_stat_list error
rule 38   opt_dcl_list -> declaration_list
rule 39   opt_dcl_list ->		/* empty */
rule 40   declaration_list -> declaration
rule 41   declaration_list -> declaration_list declaration
rule 42   declaration -> dcl_spec init_dcl_list TSEMI
rule 43   declaration -> dcl_spec init_dcl_list error
rule 44   init_dcl_list -> init_declarator
rule 45   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 46   init_declarator -> declarator
rule 47   init_declarator -> declarator TASSIGN TNUMBER
rule 48   init_declarator -> declarator TASSIGN TFNUMBER
rule 49   init_declarator -> declarator TASSIGN error
rule 50   init_declarator -> function_prototype
rule 51   declarator -> TIDENT
rule 52   declarator -> TIDENT TLBRACKET opt_number TRBRACKET
rule 53   declarator -> TIDENT TLBRACKET opt_number error
rule 54   opt_number -> TNUMBER
rule 55   opt_number ->		/* empty */
rule 56   opt_stat_list -> statement_list
rule 57   opt_stat_list ->		/* empty */
rule 58   statement_list -> statement
rule 59   statement_list -> statement_list statement
rule 60   statement -> compound_st
rule 61   statement -> expression_st
rule 62   statement -> if_st
rule 63   statement -> while_st
rule 64   statement -> return_st
rule 65   expression_st -> opt_expression TSEMI
rule 66   opt_expression -> expression
rule 67   opt_expression ->		/* empty */
rule 68   if_st -> TIF TLPAREN expression TRPAREN statement
rule 69   if_st -> TIF TLPAREN expression TRPAREN statement TELSE statement
rule 70   if_st -> TIF TLPAREN expression error statement
rule 71   if_st -> TIF error expression TRPAREN statement
rule 72   while_st -> TWHILE TLPAREN expression TRPAREN statement
rule 73   while_st -> TWHILE TLPAREN expression error statement
rule 74   while_st -> TWHILE error expression TRPAREN statement
rule 75   return_st -> TRETURN opt_expression TSEMI
rule 76   return_st -> TRETURN opt_expression error
rule 77   expression -> assignment_exp
rule 78   assignment_exp -> logical_or_exp
rule 79   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 80   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 81   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 82   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 83   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 84   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 85   assignment_exp -> unary_exp TASSIGN error
rule 86   assignment_exp -> unary_exp TADDASSIGN error
rule 87   assignment_exp -> unary_exp TSUBASSIGN error
rule 88   assignment_exp -> unary_exp TMULASSIGN error
rule 89   assignment_exp -> unary_exp TDIVASSIGN error
rule 90   assignment_exp -> unary_exp TMODASSIGN error
rule 91   logical_or_exp -> logical_and_exp
rule 92   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 93   logical_and_exp -> equality_exp
rule 94   logical_and_exp -> logical_and_exp TAND equality_exp
rule 95   equality_exp -> relational_exp
rule 96   equality_exp -> equality_exp TEQUAL relational_exp
rule 97   equality_exp -> equality_exp TNOTEQU relational_exp
rule 98   relational_exp -> additive_exp
rule 99   relational_exp -> relational_exp TGREAT additive_exp
rule 100  relational_exp -> relational_exp TLESS additive_exp
rule 101  relational_exp -> relational_exp TGREATE additive_exp
rule 102  relational_exp -> relational_exp TLESSE additive_exp
rule 103  additive_exp -> multiplicative_exp
rule 104  additive_exp -> additive_exp TADD multiplicative_exp
rule 105  additive_exp -> additive_exp TSUB multiplicative_exp
rule 106  multiplicative_exp -> unary_exp
rule 107  multiplicative_exp -> multiplicative_exp TMUL unary_exp
rule 108  multiplicative_exp -> multiplicative_exp TDIV unary_exp
rule 109  multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 110  unary_exp -> postfix_exp
rule 111  unary_exp -> TSUB unary_exp
rule 112  unary_exp -> TNOT unary_exp
rule 113  unary_exp -> TINC unary_exp
rule 114  unary_exp -> TDEC unary_exp
rule 115  postfix_exp -> primary_exp
rule 116  postfix_exp -> postfix_exp TLBRACKET expression TRBRACKET
rule 117  postfix_exp -> postfix_exp TLPAREN opt_actual_param TRPAREN
rule 118  postfix_exp -> postfix_exp TINC
rule 119  postfix_exp -> postfix_exp TDEC
rule 120  postfix_exp -> postfix_exp TLBRACKET expression error
rule 121  postfix_exp -> postfix_exp TLPAREN opt_actual_param error
rule 122  opt_actual_param -> actual_param
rule 123  opt_actual_param ->		/* empty */
rule 124  actual_param -> actual_param_list
rule 125  actual_param_list -> assignment_exp
rule 126  actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 127  primary_exp -> TIDENT
rule 128  primary_exp -> TNUMBER
rule 129  primary_exp -> TLPAREN expression error
rule 130  primary_exp -> TLPAREN expression TRPAREN

Terminals, with rules where they appear

$ (-1)
error (256) 7 12 29 37 43 49 53 70 71 73 74 76 85 86 87 88 89 90 120
    121 129
TIDENT (258) 27 51 52 53 127
TNUMBER (259) 47 54 128
TCONST (260) 23
TELSE (261) 69
TIF (262) 68 69 70 71
TEIF (263)
TINT (264) 24
TRETURN (265) 75 76
TVOID (266) 26
TWHILE (267) 72 73 74
TADDASSIGN (268) 80 86
TSUBASSIGN (269) 81 87
TMULASSIGN (270) 82 88
TDIVASSIGN (271) 83 89
TMODASSIGN (272) 84 90
TOR (273) 92
TAND (274) 94
TEQUAL (275) 96
TNOTEQU (276) 97
TGREATE (277) 101
TLESSE (278) 102
TINC (279) 113 118
TDEC (280) 114 119
TEOF (281)
TERROR (282)
TCOMMENT (283)
TFNUMBER (284) 48
TFLOAT (285) 25
TADD (286) 104
TSUB (287) 105 111
TMUL (288) 107
TDIV (289) 108
TMOD (290) 109
TASSIGN (291) 47 48 49 79 85
TNOT (292) 112
TLESS (293) 100
TGREAT (294) 99
TLPAREN (295) 11 12 28 29 68 69 70 72 73 117 121 129 130
TRPAREN (296) 11 28 68 69 71 72 74 117 130
TCOMMA (297) 14 15 16 33 45 126
TLBRACE (298) 36 37
TRBRACE (299) 36
TLBRACKET (300) 52 53 116 120
TRBRACKET (301) 52 116
TSEMI (302) 42 65 75
LOWER_THAN_ELSE (303)

Nonterminals, with rules where they appear

mini_c (49)
    on left: 1
translation_unit (50)
    on left: 2 3, on right: 1 3
external_dcl (51)
    on left: 4 5, on right: 2 3
function_def (52)
    on left: 6 7, on right: 4
function_header (53)
    on left: 8, on right: 6
function_prototype (54)
    on left: 9 10, on right: 35 50
type_only_param (55)
    on left: 11 12, on right: 9
type_only_param_list (56)
    on left: 13 14 15 16, on right: 11 12 14 15
type_only_param_dcl (57)
    on left: 17, on right: 13 14 16
dcl_spec (58)
    on left: 18, on right: 8 42 43
dcl_specifiers (59)
    on left: 19 20, on right: 18 20
dcl_specifier (60)
    on left: 21 22, on right: 17 19 20 34 35
type_qualifier (61)
    on left: 23, on right: 21
type_specifier (62)
    on left: 24 25 26, on right: 22
function_name (63)
    on left: 27, on right: 8 9 10
formal_param (64)
    on left: 28 29, on right: 8 10
opt_formal_param (65)
    on left: 30 31, on right: 28 29
formal_param_list (66)
    on left: 32 33, on right: 16 30 33
param_dcl (67)
    on left: 34 35, on right: 15 32 33
compound_st (68)
    on left: 36 37, on right: 6 7 60
opt_dcl_list (69)
    on left: 38 39, on right: 36 37
declaration_list (70)
    on left: 40 41, on right: 38 41
declaration (71)
    on left: 42 43, on right: 5 40 41
init_dcl_list (72)
    on left: 44 45, on right: 42 43 45
init_declarator (73)
    on left: 46 47 48 49 50, on right: 44 45
declarator (74)
    on left: 51 52 53, on right: 34 46 47 48 49
opt_number (75)
    on left: 54 55, on right: 52 53
opt_stat_list (76)
    on left: 56 57, on right: 36 37
statement_list (77)
    on left: 58 59, on right: 56 59
statement (78)
    on left: 60 61 62 63 64, on right: 58 59 68 69 70 71 72 73 74
expression_st (79)
    on left: 65, on right: 61
opt_expression (80)
    on left: 66 67, on right: 65 75 76
if_st (81)
    on left: 68 69 70 71, on right: 62
while_st (82)
    on left: 72 73 74, on right: 63
return_st (83)
    on left: 75 76, on right: 64
expression (84)
    on left: 77, on right: 66 68 69 70 71 72 73 74 116 120 129 130
assignment_exp (85)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90,
    on right: 77 79 80 81 82 83 84 125 126
logical_or_exp (86)
    on left: 91 92, on right: 78 92
logical_and_exp (87)
    on left: 93 94, on right: 91 92 94
equality_exp (88)
    on left: 95 96 97, on right: 93 94 96 97
relational_exp (89)
    on left: 98 99 100 101 102, on right: 95 96 97 99 100 101 102
additive_exp (90)
    on left: 103 104 105, on right: 98 99 100 101 102 104 105
multiplicative_exp (91)
    on left: 106 107 108 109, on right: 103 104 105 107 108 109
unary_exp (92)
    on left: 110 111 112 113 114, on right: 79 80 81 82 83 84 85 86
    87 88 89 90 106 107 108 109 111 112 113 114
postfix_exp (93)
    on left: 115 116 117 118 119 120 121, on right: 110 116 117 118
    119 120 121
opt_actual_param (94)
    on left: 122 123, on right: 117 121
actual_param (95)
    on left: 124, on right: 122
actual_param_list (96)
    on left: 125 126, on right: 124 126
primary_exp (97)
    on left: 127 128 129 130, on right: 115


state 0

    error	shift, and go to state 1
    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    mini_c	go to state 194
    translation_unit	go to state 6
    external_dcl	go to state 7
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 1

    function_def  ->  error . compound_st   (rule 7)

    TLBRACE	shift, and go to state 16

    compound_st	go to state 17



state 2

    type_qualifier  ->  TCONST .   (rule 23)

    $default	reduce using rule 23 (type_qualifier)



state 3

    type_specifier  ->  TINT .   (rule 24)

    $default	reduce using rule 24 (type_specifier)



state 4

    type_specifier  ->  TVOID .   (rule 26)

    $default	reduce using rule 26 (type_specifier)



state 5

    type_specifier  ->  TFLOAT .   (rule 25)

    $default	reduce using rule 25 (type_specifier)



state 6

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    error	shift, and go to state 1
    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $   	reduce using rule 1 (mini_c)

    external_dcl	go to state 18
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 7

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 8

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 9

    function_def  ->  function_header . compound_st   (rule 6)

    TLBRACE	shift, and go to state 16

    compound_st	go to state 19



state 10

    function_header  ->  dcl_spec . function_name formal_param   (rule 8)
    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 42)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 43)

    TIDENT	shift, and go to state 20

    function_prototype	go to state 21
    function_name	go to state 22
    init_dcl_list	go to state 23
    init_declarator	go to state 24
    declarator	go to state 25



state 11

    dcl_spec  ->  dcl_specifiers .   (rule 18)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 20)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 18 (dcl_spec)

    dcl_specifier	go to state 26
    type_qualifier	go to state 13
    type_specifier	go to state 14



state 12

    dcl_specifiers  ->  dcl_specifier .   (rule 19)

    $default	reduce using rule 19 (dcl_specifiers)



state 13

    dcl_specifier  ->  type_qualifier .   (rule 21)

    $default	reduce using rule 21 (dcl_specifier)



state 14

    dcl_specifier  ->  type_specifier .   (rule 22)

    $default	reduce using rule 22 (dcl_specifier)



state 15

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 16

    compound_st  ->  TLBRACE . opt_dcl_list opt_stat_list TRBRACE   (rule 36)
    compound_st  ->  TLBRACE . opt_dcl_list opt_stat_list error   (rule 37)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 39 (opt_dcl_list)

    dcl_spec	go to state 27
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_dcl_list	go to state 28
    declaration_list	go to state 29
    declaration	go to state 30



state 17

    function_def  ->  error compound_st .   (rule 7)

    $default	reduce using rule 7 (function_def)



state 18

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 19

    function_def  ->  function_header compound_st .   (rule 6)

    $default	reduce using rule 6 (function_def)



state 20

    function_name  ->  TIDENT .   (rule 27)
    declarator  ->  TIDENT .   (rule 51)
    declarator  ->  TIDENT . TLBRACKET opt_number TRBRACKET   (rule 52)
    declarator  ->  TIDENT . TLBRACKET opt_number error   (rule 53)

    TLBRACKET	shift, and go to state 31

    TLPAREN	reduce using rule 27 (function_name)
    $default	reduce using rule 51 (declarator)



state 21

    init_declarator  ->  function_prototype .   (rule 50)

    $default	reduce using rule 50 (init_declarator)



state 22

    function_header  ->  dcl_spec function_name . formal_param   (rule 8)
    function_prototype  ->  function_name . type_only_param   (rule 9)
    function_prototype  ->  function_name . formal_param   (rule 10)

    TLPAREN	shift, and go to state 32

    type_only_param	go to state 33
    formal_param	go to state 34



state 23

    declaration  ->  dcl_spec init_dcl_list . TSEMI   (rule 42)
    declaration  ->  dcl_spec init_dcl_list . error   (rule 43)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 45)

    error	shift, and go to state 35
    TCOMMA	shift, and go to state 36
    TSEMI	shift, and go to state 37



state 24

    init_dcl_list  ->  init_declarator .   (rule 44)

    $default	reduce using rule 44 (init_dcl_list)



state 25

    init_declarator  ->  declarator .   (rule 46)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 47)
    init_declarator  ->  declarator . TASSIGN TFNUMBER   (rule 48)
    init_declarator  ->  declarator . TASSIGN error   (rule 49)

    TASSIGN	shift, and go to state 38

    $default	reduce using rule 46 (init_declarator)



state 26

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 20)

    $default	reduce using rule 20 (dcl_specifiers)



state 27

    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 42)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 43)

    TIDENT	shift, and go to state 20

    function_prototype	go to state 21
    function_name	go to state 39
    init_dcl_list	go to state 23
    init_declarator	go to state 24
    declarator	go to state 25



state 28

    compound_st  ->  TLBRACE opt_dcl_list . opt_stat_list TRBRACE   (rule 36)
    compound_st  ->  TLBRACE opt_dcl_list . opt_stat_list error   (rule 37)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    TSEMI	reduce using rule 67 (opt_expression)
    $default	reduce using rule 57 (opt_stat_list)

    compound_st	go to state 50
    opt_stat_list	go to state 51
    statement_list	go to state 52
    statement	go to state 53
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 29

    opt_dcl_list  ->  declaration_list .   (rule 38)
    declaration_list  ->  declaration_list . declaration   (rule 41)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 38 (opt_dcl_list)

    dcl_spec	go to state 27
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 70



state 30

    declaration_list  ->  declaration .   (rule 40)

    $default	reduce using rule 40 (declaration_list)



state 31

    declarator  ->  TIDENT TLBRACKET . opt_number TRBRACKET   (rule 52)
    declarator  ->  TIDENT TLBRACKET . opt_number error   (rule 53)

    TNUMBER	shift, and go to state 71

    $default	reduce using rule 55 (opt_number)

    opt_number	go to state 72



state 32

    type_only_param  ->  TLPAREN . type_only_param_list TRPAREN   (rule 11)
    type_only_param  ->  TLPAREN . type_only_param_list error   (rule 12)
    formal_param  ->  TLPAREN . opt_formal_param TRPAREN   (rule 28)
    formal_param  ->  TLPAREN . opt_formal_param error   (rule 29)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 31 (opt_formal_param)

    type_only_param_list	go to state 73
    type_only_param_dcl	go to state 74
    dcl_specifier	go to state 75
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_formal_param	go to state 76
    formal_param_list	go to state 77
    param_dcl	go to state 78



state 33

    function_prototype  ->  function_name type_only_param .   (rule 9)

    $default	reduce using rule 9 (function_prototype)



state 34

    function_header  ->  dcl_spec function_name formal_param .   (rule 8)
    function_prototype  ->  function_name formal_param .   (rule 10)

    TLBRACE	reduce using rule 8 (function_header)
    $default	reduce using rule 10 (function_prototype)



state 35

    declaration  ->  dcl_spec init_dcl_list error .   (rule 43)

    $default	reduce using rule 43 (declaration)



state 36

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 45)

    TIDENT	shift, and go to state 20

    function_prototype	go to state 21
    function_name	go to state 39
    init_declarator	go to state 79
    declarator	go to state 25



state 37

    declaration  ->  dcl_spec init_dcl_list TSEMI .   (rule 42)

    $default	reduce using rule 42 (declaration)



state 38

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 47)
    init_declarator  ->  declarator TASSIGN . TFNUMBER   (rule 48)
    init_declarator  ->  declarator TASSIGN . error   (rule 49)

    error	shift, and go to state 80
    TNUMBER	shift, and go to state 81
    TFNUMBER	shift, and go to state 82



state 39

    function_prototype  ->  function_name . type_only_param   (rule 9)
    function_prototype  ->  function_name . formal_param   (rule 10)

    TLPAREN	shift, and go to state 32

    type_only_param	go to state 33
    formal_param	go to state 83



state 40

    primary_exp  ->  TIDENT .   (rule 127)

    $default	reduce using rule 127 (primary_exp)



state 41

    primary_exp  ->  TNUMBER .   (rule 128)

    $default	reduce using rule 128 (primary_exp)



state 42

    if_st  ->  TIF . TLPAREN expression TRPAREN statement   (rule 68)
    if_st  ->  TIF . TLPAREN expression TRPAREN statement TELSE statement   (rule 69)
    if_st  ->  TIF . TLPAREN expression error statement   (rule 70)
    if_st  ->  TIF . error expression TRPAREN statement   (rule 71)

    error	shift, and go to state 84
    TLPAREN	shift, and go to state 85



state 43

    return_st  ->  TRETURN . opt_expression TSEMI   (rule 75)
    return_st  ->  TRETURN . opt_expression error   (rule 76)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    $default	reduce using rule 67 (opt_expression)

    opt_expression	go to state 86
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 44

    while_st  ->  TWHILE . TLPAREN expression TRPAREN statement   (rule 72)
    while_st  ->  TWHILE . TLPAREN expression error statement   (rule 73)
    while_st  ->  TWHILE . error expression TRPAREN statement   (rule 74)

    error	shift, and go to state 87
    TLPAREN	shift, and go to state 88



state 45

    unary_exp  ->  TINC . unary_exp   (rule 113)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    unary_exp	go to state 89
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 46

    unary_exp  ->  TDEC . unary_exp   (rule 114)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    unary_exp	go to state 90
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 47

    unary_exp  ->  TSUB . unary_exp   (rule 111)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    unary_exp	go to state 91
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 48

    unary_exp  ->  TNOT . unary_exp   (rule 112)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    unary_exp	go to state 92
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 49

    primary_exp  ->  TLPAREN . expression error   (rule 129)
    primary_exp  ->  TLPAREN . expression TRPAREN   (rule 130)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    expression	go to state 93
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 50

    statement  ->  compound_st .   (rule 60)

    $default	reduce using rule 60 (statement)



state 51

    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list . TRBRACE   (rule 36)
    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list . error   (rule 37)

    error	shift, and go to state 94
    TRBRACE	shift, and go to state 95



state 52

    opt_stat_list  ->  statement_list .   (rule 56)
    statement_list  ->  statement_list . statement   (rule 59)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    TSEMI	reduce using rule 67 (opt_expression)
    $default	reduce using rule 56 (opt_stat_list)

    compound_st	go to state 50
    statement	go to state 96
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 53

    statement_list  ->  statement .   (rule 58)

    $default	reduce using rule 58 (statement_list)



state 54

    statement  ->  expression_st .   (rule 61)

    $default	reduce using rule 61 (statement)



state 55

    expression_st  ->  opt_expression . TSEMI   (rule 65)

    TSEMI	shift, and go to state 97



state 56

    statement  ->  if_st .   (rule 62)

    $default	reduce using rule 62 (statement)



state 57

    statement  ->  while_st .   (rule 63)

    $default	reduce using rule 63 (statement)



state 58

    statement  ->  return_st .   (rule 64)

    $default	reduce using rule 64 (statement)



state 59

    opt_expression  ->  expression .   (rule 66)

    $default	reduce using rule 66 (opt_expression)



state 60

    expression  ->  assignment_exp .   (rule 77)

    $default	reduce using rule 77 (expression)



state 61

    assignment_exp  ->  logical_or_exp .   (rule 78)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 92)

    TOR 	shift, and go to state 98

    $default	reduce using rule 78 (assignment_exp)



state 62

    logical_or_exp  ->  logical_and_exp .   (rule 91)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 94)

    TAND	shift, and go to state 99

    $default	reduce using rule 91 (logical_or_exp)



state 63

    logical_and_exp  ->  equality_exp .   (rule 93)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 96)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 97)

    TEQUAL	shift, and go to state 100
    TNOTEQU	shift, and go to state 101

    $default	reduce using rule 93 (logical_and_exp)



state 64

    equality_exp  ->  relational_exp .   (rule 95)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 99)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 100)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 101)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 102)

    TGREATE	shift, and go to state 102
    TLESSE	shift, and go to state 103
    TLESS	shift, and go to state 104
    TGREAT	shift, and go to state 105

    $default	reduce using rule 95 (equality_exp)



state 65

    relational_exp  ->  additive_exp .   (rule 98)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 105)

    TADD	shift, and go to state 106
    TSUB	shift, and go to state 107

    $default	reduce using rule 98 (relational_exp)



state 66

    additive_exp  ->  multiplicative_exp .   (rule 103)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 107)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 108)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 109)

    TMUL	shift, and go to state 108
    TDIV	shift, and go to state 109
    TMOD	shift, and go to state 110

    $default	reduce using rule 103 (additive_exp)



state 67

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 79)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 80)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 81)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 82)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 83)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 84)
    assignment_exp  ->  unary_exp . TASSIGN error   (rule 85)
    assignment_exp  ->  unary_exp . TADDASSIGN error   (rule 86)
    assignment_exp  ->  unary_exp . TSUBASSIGN error   (rule 87)
    assignment_exp  ->  unary_exp . TMULASSIGN error   (rule 88)
    assignment_exp  ->  unary_exp . TDIVASSIGN error   (rule 89)
    assignment_exp  ->  unary_exp . TMODASSIGN error   (rule 90)
    multiplicative_exp  ->  unary_exp .   (rule 106)

    TADDASSIGN	shift, and go to state 111
    TSUBASSIGN	shift, and go to state 112
    TMULASSIGN	shift, and go to state 113
    TDIVASSIGN	shift, and go to state 114
    TMODASSIGN	shift, and go to state 115
    TASSIGN	shift, and go to state 116

    $default	reduce using rule 106 (multiplicative_exp)



state 68

    unary_exp  ->  postfix_exp .   (rule 110)
    postfix_exp  ->  postfix_exp . TLBRACKET expression TRBRACKET   (rule 116)
    postfix_exp  ->  postfix_exp . TLPAREN opt_actual_param TRPAREN   (rule 117)
    postfix_exp  ->  postfix_exp . TINC   (rule 118)
    postfix_exp  ->  postfix_exp . TDEC   (rule 119)
    postfix_exp  ->  postfix_exp . TLBRACKET expression error   (rule 120)
    postfix_exp  ->  postfix_exp . TLPAREN opt_actual_param error   (rule 121)

    TINC	shift, and go to state 117
    TDEC	shift, and go to state 118
    TLPAREN	shift, and go to state 119
    TLBRACKET	shift, and go to state 120

    $default	reduce using rule 110 (unary_exp)



state 69

    postfix_exp  ->  primary_exp .   (rule 115)

    $default	reduce using rule 115 (postfix_exp)



state 70

    declaration_list  ->  declaration_list declaration .   (rule 41)

    $default	reduce using rule 41 (declaration_list)



state 71

    opt_number  ->  TNUMBER .   (rule 54)

    $default	reduce using rule 54 (opt_number)



state 72

    declarator  ->  TIDENT TLBRACKET opt_number . TRBRACKET   (rule 52)
    declarator  ->  TIDENT TLBRACKET opt_number . error   (rule 53)

    error	shift, and go to state 121
    TRBRACKET	shift, and go to state 122



state 73

    type_only_param  ->  TLPAREN type_only_param_list . TRPAREN   (rule 11)
    type_only_param  ->  TLPAREN type_only_param_list . error   (rule 12)
    type_only_param_list  ->  type_only_param_list . TCOMMA type_only_param_dcl   (rule 14)
    type_only_param_list  ->  type_only_param_list . TCOMMA param_dcl   (rule 15)

    error	shift, and go to state 123
    TRPAREN	shift, and go to state 124
    TCOMMA	shift, and go to state 125



state 74

    type_only_param_list  ->  type_only_param_dcl .   (rule 13)

    $default	reduce using rule 13 (type_only_param_list)



state 75

    type_only_param_dcl  ->  dcl_specifier .   (rule 17)
    param_dcl  ->  dcl_specifier . declarator   (rule 34)
    param_dcl  ->  dcl_specifier . function_prototype   (rule 35)

    TIDENT	shift, and go to state 20

    $default	reduce using rule 17 (type_only_param_dcl)

    function_prototype	go to state 126
    function_name	go to state 39
    declarator	go to state 127



state 76

    formal_param  ->  TLPAREN opt_formal_param . TRPAREN   (rule 28)
    formal_param  ->  TLPAREN opt_formal_param . error   (rule 29)

    error	shift, and go to state 128
    TRPAREN	shift, and go to state 129



state 77

    type_only_param_list  ->  formal_param_list . TCOMMA type_only_param_dcl   (rule 16)
    opt_formal_param  ->  formal_param_list .   (rule 30)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 33)

    TCOMMA	shift, and go to state 130

    $default	reduce using rule 30 (opt_formal_param)



state 78

    formal_param_list  ->  param_dcl .   (rule 32)

    $default	reduce using rule 32 (formal_param_list)



state 79

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 45)

    $default	reduce using rule 45 (init_dcl_list)



state 80

    init_declarator  ->  declarator TASSIGN error .   (rule 49)

    $default	reduce using rule 49 (init_declarator)



state 81

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 47)

    $default	reduce using rule 47 (init_declarator)



state 82

    init_declarator  ->  declarator TASSIGN TFNUMBER .   (rule 48)

    $default	reduce using rule 48 (init_declarator)



state 83

    function_prototype  ->  function_name formal_param .   (rule 10)

    $default	reduce using rule 10 (function_prototype)



state 84

    if_st  ->  TIF error . expression TRPAREN statement   (rule 71)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    expression	go to state 131
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 85

    if_st  ->  TIF TLPAREN . expression TRPAREN statement   (rule 68)
    if_st  ->  TIF TLPAREN . expression TRPAREN statement TELSE statement   (rule 69)
    if_st  ->  TIF TLPAREN . expression error statement   (rule 70)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    expression	go to state 132
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 86

    return_st  ->  TRETURN opt_expression . TSEMI   (rule 75)
    return_st  ->  TRETURN opt_expression . error   (rule 76)

    error	shift, and go to state 133
    TSEMI	shift, and go to state 134



state 87

    while_st  ->  TWHILE error . expression TRPAREN statement   (rule 74)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    expression	go to state 135
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 88

    while_st  ->  TWHILE TLPAREN . expression TRPAREN statement   (rule 72)
    while_st  ->  TWHILE TLPAREN . expression error statement   (rule 73)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    expression	go to state 136
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 89

    unary_exp  ->  TINC unary_exp .   (rule 113)

    $default	reduce using rule 113 (unary_exp)



state 90

    unary_exp  ->  TDEC unary_exp .   (rule 114)

    $default	reduce using rule 114 (unary_exp)



state 91

    unary_exp  ->  TSUB unary_exp .   (rule 111)

    $default	reduce using rule 111 (unary_exp)



state 92

    unary_exp  ->  TNOT unary_exp .   (rule 112)

    $default	reduce using rule 112 (unary_exp)



state 93

    primary_exp  ->  TLPAREN expression . error   (rule 129)
    primary_exp  ->  TLPAREN expression . TRPAREN   (rule 130)

    error	shift, and go to state 137
    TRPAREN	shift, and go to state 138



state 94

    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list error .   (rule 37)

    $default	reduce using rule 37 (compound_st)



state 95

    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list TRBRACE .   (rule 36)

    $default	reduce using rule 36 (compound_st)



state 96

    statement_list  ->  statement_list statement .   (rule 59)

    $default	reduce using rule 59 (statement_list)



state 97

    expression_st  ->  opt_expression TSEMI .   (rule 65)

    $default	reduce using rule 65 (expression_st)



state 98

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 92)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    logical_and_exp	go to state 139
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 99

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 94)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    equality_exp	go to state 141
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 100

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 96)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    relational_exp	go to state 142
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 101

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 97)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    relational_exp	go to state 143
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 102

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 101)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    additive_exp	go to state 144
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 103

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 102)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    additive_exp	go to state 145
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 104

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 100)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    additive_exp	go to state 146
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 105

    relational_exp  ->  relational_exp TGREAT . additive_exp   (rule 99)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    additive_exp	go to state 147
    multiplicative_exp	go to state 66
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 106

    additive_exp  ->  additive_exp TADD . multiplicative_exp   (rule 104)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    multiplicative_exp	go to state 148
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 107

    additive_exp  ->  additive_exp TSUB . multiplicative_exp   (rule 105)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    multiplicative_exp	go to state 149
    unary_exp	go to state 140
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 108

    multiplicative_exp  ->  multiplicative_exp TMUL . unary_exp   (rule 107)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    unary_exp	go to state 150
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 109

    multiplicative_exp  ->  multiplicative_exp TDIV . unary_exp   (rule 108)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    unary_exp	go to state 151
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 110

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 109)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    unary_exp	go to state 152
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 111

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 80)
    assignment_exp  ->  unary_exp TADDASSIGN . error   (rule 86)

    error	shift, and go to state 153
    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    assignment_exp	go to state 154
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 112

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 81)
    assignment_exp  ->  unary_exp TSUBASSIGN . error   (rule 87)

    error	shift, and go to state 155
    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    assignment_exp	go to state 156
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 113

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 82)
    assignment_exp  ->  unary_exp TMULASSIGN . error   (rule 88)

    error	shift, and go to state 157
    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    assignment_exp	go to state 158
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 114

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 83)
    assignment_exp  ->  unary_exp TDIVASSIGN . error   (rule 89)

    error	shift, and go to state 159
    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    assignment_exp	go to state 160
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 115

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 84)
    assignment_exp  ->  unary_exp TMODASSIGN . error   (rule 90)

    error	shift, and go to state 161
    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    assignment_exp	go to state 162
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 116

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 79)
    assignment_exp  ->  unary_exp TASSIGN . error   (rule 85)

    error	shift, and go to state 163
    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    assignment_exp	go to state 164
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 117

    postfix_exp  ->  postfix_exp TINC .   (rule 118)

    $default	reduce using rule 118 (postfix_exp)



state 118

    postfix_exp  ->  postfix_exp TDEC .   (rule 119)

    $default	reduce using rule 119 (postfix_exp)



state 119

    postfix_exp  ->  postfix_exp TLPAREN . opt_actual_param TRPAREN   (rule 117)
    postfix_exp  ->  postfix_exp TLPAREN . opt_actual_param error   (rule 121)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    $default	reduce using rule 123 (opt_actual_param)

    assignment_exp	go to state 165
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    opt_actual_param	go to state 166
    actual_param	go to state 167
    actual_param_list	go to state 168
    primary_exp	go to state 69



state 120

    postfix_exp  ->  postfix_exp TLBRACKET . expression TRBRACKET   (rule 116)
    postfix_exp  ->  postfix_exp TLBRACKET . expression error   (rule 120)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    expression	go to state 169
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 121

    declarator  ->  TIDENT TLBRACKET opt_number error .   (rule 53)

    $default	reduce using rule 53 (declarator)



state 122

    declarator  ->  TIDENT TLBRACKET opt_number TRBRACKET .   (rule 52)

    $default	reduce using rule 52 (declarator)



state 123

    type_only_param  ->  TLPAREN type_only_param_list error .   (rule 12)

    $default	reduce using rule 12 (type_only_param)



state 124

    type_only_param  ->  TLPAREN type_only_param_list TRPAREN .   (rule 11)

    $default	reduce using rule 11 (type_only_param)



state 125

    type_only_param_list  ->  type_only_param_list TCOMMA . type_only_param_dcl   (rule 14)
    type_only_param_list  ->  type_only_param_list TCOMMA . param_dcl   (rule 15)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    type_only_param_dcl	go to state 170
    dcl_specifier	go to state 75
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 171



state 126

    param_dcl  ->  dcl_specifier function_prototype .   (rule 35)

    $default	reduce using rule 35 (param_dcl)



state 127

    param_dcl  ->  dcl_specifier declarator .   (rule 34)

    $default	reduce using rule 34 (param_dcl)



state 128

    formal_param  ->  TLPAREN opt_formal_param error .   (rule 29)

    $default	reduce using rule 29 (formal_param)



state 129

    formal_param  ->  TLPAREN opt_formal_param TRPAREN .   (rule 28)

    $default	reduce using rule 28 (formal_param)



state 130

    type_only_param_list  ->  formal_param_list TCOMMA . type_only_param_dcl   (rule 16)
    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 33)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    type_only_param_dcl	go to state 172
    dcl_specifier	go to state 75
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 173



state 131

    if_st  ->  TIF error expression . TRPAREN statement   (rule 71)

    TRPAREN	shift, and go to state 174



state 132

    if_st  ->  TIF TLPAREN expression . TRPAREN statement   (rule 68)
    if_st  ->  TIF TLPAREN expression . TRPAREN statement TELSE statement   (rule 69)
    if_st  ->  TIF TLPAREN expression . error statement   (rule 70)

    error	shift, and go to state 175
    TRPAREN	shift, and go to state 176



state 133

    return_st  ->  TRETURN opt_expression error .   (rule 76)

    $default	reduce using rule 76 (return_st)



state 134

    return_st  ->  TRETURN opt_expression TSEMI .   (rule 75)

    $default	reduce using rule 75 (return_st)



state 135

    while_st  ->  TWHILE error expression . TRPAREN statement   (rule 74)

    TRPAREN	shift, and go to state 177



state 136

    while_st  ->  TWHILE TLPAREN expression . TRPAREN statement   (rule 72)
    while_st  ->  TWHILE TLPAREN expression . error statement   (rule 73)

    error	shift, and go to state 178
    TRPAREN	shift, and go to state 179



state 137

    primary_exp  ->  TLPAREN expression error .   (rule 129)

    $default	reduce using rule 129 (primary_exp)



state 138

    primary_exp  ->  TLPAREN expression TRPAREN .   (rule 130)

    $default	reduce using rule 130 (primary_exp)



state 139

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 92)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 94)

    TAND	shift, and go to state 99

    $default	reduce using rule 92 (logical_or_exp)



state 140

    multiplicative_exp  ->  unary_exp .   (rule 106)

    $default	reduce using rule 106 (multiplicative_exp)



state 141

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 94)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 96)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 97)

    TEQUAL	shift, and go to state 100
    TNOTEQU	shift, and go to state 101

    $default	reduce using rule 94 (logical_and_exp)



state 142

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 96)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 99)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 100)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 101)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 102)

    TGREATE	shift, and go to state 102
    TLESSE	shift, and go to state 103
    TLESS	shift, and go to state 104
    TGREAT	shift, and go to state 105

    $default	reduce using rule 96 (equality_exp)



state 143

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 97)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 99)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 100)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 101)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 102)

    TGREATE	shift, and go to state 102
    TLESSE	shift, and go to state 103
    TLESS	shift, and go to state 104
    TGREAT	shift, and go to state 105

    $default	reduce using rule 97 (equality_exp)



state 144

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 101)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 105)

    TADD	shift, and go to state 106
    TSUB	shift, and go to state 107

    $default	reduce using rule 101 (relational_exp)



state 145

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 102)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 105)

    TADD	shift, and go to state 106
    TSUB	shift, and go to state 107

    $default	reduce using rule 102 (relational_exp)



state 146

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 100)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 105)

    TADD	shift, and go to state 106
    TSUB	shift, and go to state 107

    $default	reduce using rule 100 (relational_exp)



state 147

    relational_exp  ->  relational_exp TGREAT additive_exp .   (rule 99)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 104)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 105)

    TADD	shift, and go to state 106
    TSUB	shift, and go to state 107

    $default	reduce using rule 99 (relational_exp)



state 148

    additive_exp  ->  additive_exp TADD multiplicative_exp .   (rule 104)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 107)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 108)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 109)

    TMUL	shift, and go to state 108
    TDIV	shift, and go to state 109
    TMOD	shift, and go to state 110

    $default	reduce using rule 104 (additive_exp)



state 149

    additive_exp  ->  additive_exp TSUB multiplicative_exp .   (rule 105)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 107)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 108)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 109)

    TMUL	shift, and go to state 108
    TDIV	shift, and go to state 109
    TMOD	shift, and go to state 110

    $default	reduce using rule 105 (additive_exp)



state 150

    multiplicative_exp  ->  multiplicative_exp TMUL unary_exp .   (rule 107)

    $default	reduce using rule 107 (multiplicative_exp)



state 151

    multiplicative_exp  ->  multiplicative_exp TDIV unary_exp .   (rule 108)

    $default	reduce using rule 108 (multiplicative_exp)



state 152

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 109)

    $default	reduce using rule 109 (multiplicative_exp)



state 153

    assignment_exp  ->  unary_exp TADDASSIGN error .   (rule 86)

    $default	reduce using rule 86 (assignment_exp)



state 154

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 80)

    $default	reduce using rule 80 (assignment_exp)



state 155

    assignment_exp  ->  unary_exp TSUBASSIGN error .   (rule 87)

    $default	reduce using rule 87 (assignment_exp)



state 156

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 81)

    $default	reduce using rule 81 (assignment_exp)



state 157

    assignment_exp  ->  unary_exp TMULASSIGN error .   (rule 88)

    $default	reduce using rule 88 (assignment_exp)



state 158

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 82)

    $default	reduce using rule 82 (assignment_exp)



state 159

    assignment_exp  ->  unary_exp TDIVASSIGN error .   (rule 89)

    $default	reduce using rule 89 (assignment_exp)



state 160

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 83)

    $default	reduce using rule 83 (assignment_exp)



state 161

    assignment_exp  ->  unary_exp TMODASSIGN error .   (rule 90)

    $default	reduce using rule 90 (assignment_exp)



state 162

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 84)

    $default	reduce using rule 84 (assignment_exp)



state 163

    assignment_exp  ->  unary_exp TASSIGN error .   (rule 85)

    $default	reduce using rule 85 (assignment_exp)



state 164

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 79)

    $default	reduce using rule 79 (assignment_exp)



state 165

    actual_param_list  ->  assignment_exp .   (rule 125)

    $default	reduce using rule 125 (actual_param_list)



state 166

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param . TRPAREN   (rule 117)
    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param . error   (rule 121)

    error	shift, and go to state 180
    TRPAREN	shift, and go to state 181



state 167

    opt_actual_param  ->  actual_param .   (rule 122)

    $default	reduce using rule 122 (opt_actual_param)



state 168

    actual_param  ->  actual_param_list .   (rule 124)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 126)

    TCOMMA	shift, and go to state 182

    $default	reduce using rule 124 (actual_param)



state 169

    postfix_exp  ->  postfix_exp TLBRACKET expression . TRBRACKET   (rule 116)
    postfix_exp  ->  postfix_exp TLBRACKET expression . error   (rule 120)

    error	shift, and go to state 183
    TRBRACKET	shift, and go to state 184



state 170

    type_only_param_list  ->  type_only_param_list TCOMMA type_only_param_dcl .   (rule 14)

    $default	reduce using rule 14 (type_only_param_list)



state 171

    type_only_param_list  ->  type_only_param_list TCOMMA param_dcl .   (rule 15)

    $default	reduce using rule 15 (type_only_param_list)



state 172

    type_only_param_list  ->  formal_param_list TCOMMA type_only_param_dcl .   (rule 16)

    $default	reduce using rule 16 (type_only_param_list)



state 173

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 33)

    $default	reduce using rule 33 (formal_param_list)



state 174

    if_st  ->  TIF error expression TRPAREN . statement   (rule 71)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    $default	reduce using rule 67 (opt_expression)

    compound_st	go to state 50
    statement	go to state 185
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 175

    if_st  ->  TIF TLPAREN expression error . statement   (rule 70)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    $default	reduce using rule 67 (opt_expression)

    compound_st	go to state 50
    statement	go to state 186
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 176

    if_st  ->  TIF TLPAREN expression TRPAREN . statement   (rule 68)
    if_st  ->  TIF TLPAREN expression TRPAREN . statement TELSE statement   (rule 69)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    $default	reduce using rule 67 (opt_expression)

    compound_st	go to state 50
    statement	go to state 187
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 177

    while_st  ->  TWHILE error expression TRPAREN . statement   (rule 74)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    $default	reduce using rule 67 (opt_expression)

    compound_st	go to state 50
    statement	go to state 188
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 178

    while_st  ->  TWHILE TLPAREN expression error . statement   (rule 73)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    $default	reduce using rule 67 (opt_expression)

    compound_st	go to state 50
    statement	go to state 189
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 179

    while_st  ->  TWHILE TLPAREN expression TRPAREN . statement   (rule 72)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    $default	reduce using rule 67 (opt_expression)

    compound_st	go to state 50
    statement	go to state 190
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 180

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param error .   (rule 121)

    $default	reduce using rule 121 (postfix_exp)



state 181

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param TRPAREN .   (rule 117)

    $default	reduce using rule 117 (postfix_exp)



state 182

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 126)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49

    assignment_exp	go to state 191
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 183

    postfix_exp  ->  postfix_exp TLBRACKET expression error .   (rule 120)

    $default	reduce using rule 120 (postfix_exp)



state 184

    postfix_exp  ->  postfix_exp TLBRACKET expression TRBRACKET .   (rule 116)

    $default	reduce using rule 116 (postfix_exp)



state 185

    if_st  ->  TIF error expression TRPAREN statement .   (rule 71)

    $default	reduce using rule 71 (if_st)



state 186

    if_st  ->  TIF TLPAREN expression error statement .   (rule 70)

    $default	reduce using rule 70 (if_st)



state 187

    if_st  ->  TIF TLPAREN expression TRPAREN statement .   (rule 68)
    if_st  ->  TIF TLPAREN expression TRPAREN statement . TELSE statement   (rule 69)

    TELSE	shift, and go to state 192

    $default	reduce using rule 68 (if_st)



state 188

    while_st  ->  TWHILE error expression TRPAREN statement .   (rule 74)

    $default	reduce using rule 74 (while_st)



state 189

    while_st  ->  TWHILE TLPAREN expression error statement .   (rule 73)

    $default	reduce using rule 73 (while_st)



state 190

    while_st  ->  TWHILE TLPAREN expression TRPAREN statement .   (rule 72)

    $default	reduce using rule 72 (while_st)



state 191

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 126)

    $default	reduce using rule 126 (actual_param_list)



state 192

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE . statement   (rule 69)

    TIDENT	shift, and go to state 40
    TNUMBER	shift, and go to state 41
    TIF 	shift, and go to state 42
    TRETURN	shift, and go to state 43
    TWHILE	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TSUB	shift, and go to state 47
    TNOT	shift, and go to state 48
    TLPAREN	shift, and go to state 49
    TLBRACE	shift, and go to state 16

    $default	reduce using rule 67 (opt_expression)

    compound_st	go to state 50
    statement	go to state 193
    expression_st	go to state 54
    opt_expression	go to state 55
    if_st	go to state 56
    while_st	go to state 57
    return_st	go to state 58
    expression	go to state 59
    assignment_exp	go to state 60
    logical_or_exp	go to state 61
    logical_and_exp	go to state 62
    equality_exp	go to state 63
    relational_exp	go to state 64
    additive_exp	go to state 65
    multiplicative_exp	go to state 66
    unary_exp	go to state 67
    postfix_exp	go to state 68
    primary_exp	go to state 69



state 193

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE statement .   (rule 69)

    $default	reduce using rule 69 (if_st)



state 194

    $   	go to state 195



state 195

    $   	go to state 196



state 196

    $default	accept
