State 146 contains 1 shift/reduce conflict.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_del
rule 3    translation_unit -> translation_unit external_del
rule 4    external_del -> function_def
rule 5    external_del -> declaration
rule 6    function_def -> function_header compound_st
rule 7    function_header -> del_spec function_name formal_param
rule 8    del_spec -> del_specifiers
rule 9    del_specifiers -> del_specifier
rule 10   del_specifiers -> del_specifiers del_specifier
rule 11   del_specifier -> type_qualifier
rule 12   del_specifier -> type_specifier
rule 13   type_qualifier -> TCONST
rule 14   type_specifier -> TINT
rule 15   type_specifier -> TVOID
rule 16   function_name -> TIDENT
rule 17   formal_param -> '(' opt_formal_param ')'
rule 18   opt_formal_param -> formal_param_list
rule 19   opt_formal_param ->		/* empty */
rule 20   formal_param_list -> param_del
rule 21   formal_param_list -> formal_param_list ',' param_del
rule 22   param_del -> del_spec declarator
rule 23   compound_st -> '{' opt_del_list opt_stat_list '}'
rule 24   opt_del_list -> declaration_list
rule 25   opt_del_list ->		/* empty */
rule 26   declaration_list -> declaration
rule 27   declaration_list -> declaration_list declaration
rule 28   declaration -> del_spec init_del_list ';'
rule 29   init_del_list -> init_declarator
rule 30   init_del_list -> init_del_list ',' init_declarator
rule 31   init_declarator -> declarator
rule 32   init_declarator -> declarator '=' TNUMBER
rule 33   declarator -> TIDENT
rule 34   declarator -> TIDENT '[' opt_number ']'
rule 35   opt_number -> TNUMBER
rule 36   opt_number ->		/* empty */
rule 37   opt_stat_list -> statement
rule 38   opt_stat_list -> statement_list statement
rule 39   statement_list -> statement
rule 40   statement_list -> statement_list statement
rule 41   statement -> compound_st
rule 42   statement -> expression_st
rule 43   statement -> if_st
rule 44   statement -> while_st
rule 45   statement -> return_st
rule 46   expression_st -> opt_expression ';'
rule 47   opt_expression -> expression
rule 48   opt_expression ->		/* empty */
rule 49   if_st -> TIF '(' expression ')' statement
rule 50   if_st -> TIF '(' expression ')' statement TELSE statement
rule 51   while_st -> TWHILE '(' expression ')' statement
rule 52   return_st -> TRETURN opt_expression ';'
rule 53   expression -> assignment_exp
rule 54   assignment_exp -> logical_or_exp
rule 55   assignment_exp -> unary_exp '=' assignment_exp
rule 56   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 57   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 58   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 59   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 60   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 61   logical_or_exp -> logical_and_exp
rule 62   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 63   logical_and_exp -> equality_exp
rule 64   logical_and_exp -> logical_and_exp TAND equality_exp
rule 65   equality_exp -> relational_exp
rule 66   equality_exp -> equality_exp TEQUAL relational_exp
rule 67   equality_exp -> equality_exp TNOTEQU relational_exp
rule 68   relational_exp -> additive_exp
rule 69   relational_exp -> relational_exp '>' additive_exp
rule 70   relational_exp -> relational_exp '<' additive_exp
rule 71   relational_exp -> relational_exp TGREATE additive_exp
rule 72   relational_exp -> relational_exp TLESSE additive_exp
rule 73   additive_exp -> multiplicative_exp
rule 74   additive_exp -> additive_exp '+' multiplicative_exp
rule 75   additive_exp -> additive_exp '-' multiplicative_exp
rule 76   multiplicative_exp -> unary_exp
rule 77   multiplicative_exp -> multiplicative_exp '*' unary_exp
rule 78   multiplicative_exp -> multiplicative_exp '/' unary_exp
rule 79   multiplicative_exp -> multiplicative_exp '%' unary_exp
rule 80   unary_exp -> postfix_exp
rule 81   unary_exp -> '-' unary_exp
rule 82   unary_exp -> '!' unary_exp
rule 83   unary_exp -> TINC unary_exp
rule 84   unary_exp -> TDEC unary_exp
rule 85   postfix_exp -> primary_exp
rule 86   postfix_exp -> postfix_exp '[' expression ']'
rule 87   postfix_exp -> postfix_exp '(' opt_actual_param ')'
rule 88   postfix_exp -> postfix_exp TINC
rule 89   postfix_exp -> postfix_exp TDEC
rule 90   opt_actual_param -> actual_param
rule 91   opt_actual_param ->		/* empty */
rule 92   actual_param -> actual_param_list
rule 93   actual_param_list -> assignment_exp
rule 94   actual_param_list -> actual_param_list ',' assignment_exp
rule 95   primary_exp -> TIDENT
rule 96   primary_exp -> TNUMBER
rule 97   primary_exp -> '(' expression ')'

Terminals, with rules where they appear

$ (-1)
'!' (33) 82
'%' (37) 79
'(' (40) 17 49 50 51 87 97
')' (41) 17 49 50 51 87 97
'*' (42) 77
'+' (43) 74
',' (44) 21 30 94
'-' (45) 75 81
'/' (47) 78
';' (59) 28 46 52
'<' (60) 70
'=' (61) 32 55
'>' (62) 69
'[' (91) 34 86
']' (93) 34 86
'{' (123) 23
'}' (125) 23
error (256)
TIDENT (258) 16 33 34 95
TNUMBER (259) 32 35 96
TCONST (260) 13
TELSE (261) 50
TIF (262) 49 50
TINT (263) 14
TRETURN (264) 52
TVOID (265) 15
TWHILE (266) 51
TADDASSIGN (267) 56
TSUBASSIGN (268) 57
TMULASSIGN (269) 58
TDIVASSIGN (270) 59
TMODASSIGN (271) 60
TOR (272) 62
TAND (273) 64
TEQUAL (274) 66
TNOTEQU (275) 67
TGREATE (276) 71
TLESSE (277) 72
TINC (278) 83 88
TDEC (279) 84 89

Nonterminals, with rules where they appear

mini_c (42)
    on left: 1
translation_unit (43)
    on left: 2 3, on right: 1 3
external_del (44)
    on left: 4 5, on right: 2 3
function_def (45)
    on left: 6, on right: 4
function_header (46)
    on left: 7, on right: 6
del_spec (47)
    on left: 8, on right: 7 22 28
del_specifiers (48)
    on left: 9 10, on right: 8 10
del_specifier (49)
    on left: 11 12, on right: 9 10
type_qualifier (50)
    on left: 13, on right: 11
type_specifier (51)
    on left: 14 15, on right: 12
function_name (52)
    on left: 16, on right: 7
formal_param (53)
    on left: 17, on right: 7
opt_formal_param (54)
    on left: 18 19, on right: 17
formal_param_list (55)
    on left: 20 21, on right: 18 21
param_del (56)
    on left: 22, on right: 20 21
compound_st (57)
    on left: 23, on right: 6 41
opt_del_list (58)
    on left: 24 25, on right: 23
declaration_list (59)
    on left: 26 27, on right: 24 27
declaration (60)
    on left: 28, on right: 5 26 27
init_del_list (61)
    on left: 29 30, on right: 28 30
init_declarator (62)
    on left: 31 32, on right: 29 30
declarator (63)
    on left: 33 34, on right: 22 31 32
opt_number (64)
    on left: 35 36, on right: 34
opt_stat_list (65)
    on left: 37 38, on right: 23
statement_list (66)
    on left: 39 40, on right: 38 40
statement (67)
    on left: 41 42 43 44 45, on right: 37 38 39 40 49 50 51
expression_st (68)
    on left: 46, on right: 42
opt_expression (69)
    on left: 47 48, on right: 46 52
if_st (70)
    on left: 49 50, on right: 43
while_st (71)
    on left: 51, on right: 44
return_st (72)
    on left: 52, on right: 45
expression (73)
    on left: 53, on right: 47 49 50 51 86 97
assignment_exp (74)
    on left: 54 55 56 57 58 59 60, on right: 53 55 56 57 58 59 60 93
    94
logical_or_exp (75)
    on left: 61 62, on right: 54 62
logical_and_exp (76)
    on left: 63 64, on right: 61 62 64
equality_exp (77)
    on left: 65 66 67, on right: 63 64 66 67
relational_exp (78)
    on left: 68 69 70 71 72, on right: 65 66 67 69 70 71 72
additive_exp (79)
    on left: 73 74 75, on right: 68 69 70 71 72 74 75
multiplicative_exp (80)
    on left: 76 77 78 79, on right: 73 74 75 77 78 79
unary_exp (81)
    on left: 80 81 82 83 84, on right: 55 56 57 58 59 60 76 77 78 79
    81 82 83 84
postfix_exp (82)
    on left: 85 86 87 88 89, on right: 80 86 87 88 89
opt_actual_param (83)
    on left: 90 91, on right: 87
actual_param (84)
    on left: 92, on right: 90
actual_param_list (85)
    on left: 93 94, on right: 92 94
primary_exp (86)
    on left: 95 96 97, on right: 85


state 0

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    mini_c	go to state 151
    translation_unit	go to state 4
    external_del	go to state 5
    function_def	go to state 6
    function_header	go to state 7
    del_spec	go to state 8
    del_specifiers	go to state 9
    del_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    declaration	go to state 13



state 1

    type_qualifier  ->  TCONST .   (rule 13)

    $default	reduce using rule 13 (type_qualifier)



state 2

    type_specifier  ->  TINT .   (rule 14)

    $default	reduce using rule 14 (type_specifier)



state 3

    type_specifier  ->  TVOID .   (rule 15)

    $default	reduce using rule 15 (type_specifier)



state 4

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_del   (rule 3)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 1 (mini_c)

    external_del	go to state 14
    function_def	go to state 6
    function_header	go to state 7
    del_spec	go to state 8
    del_specifiers	go to state 9
    del_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    declaration	go to state 13



state 5

    translation_unit  ->  external_del .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 6

    external_del  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_del)



state 7

    function_def  ->  function_header . compound_st   (rule 6)

    '{' 	shift, and go to state 15

    compound_st	go to state 16



state 8

    function_header  ->  del_spec . function_name formal_param   (rule 7)
    declaration  ->  del_spec . init_del_list ';'   (rule 28)

    TIDENT	shift, and go to state 17

    function_name	go to state 18
    init_del_list	go to state 19
    init_declarator	go to state 20
    declarator	go to state 21



state 9

    del_spec  ->  del_specifiers .   (rule 8)
    del_specifiers  ->  del_specifiers . del_specifier   (rule 10)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 8 (del_spec)

    del_specifier	go to state 22
    type_qualifier	go to state 11
    type_specifier	go to state 12



state 10

    del_specifiers  ->  del_specifier .   (rule 9)

    $default	reduce using rule 9 (del_specifiers)



state 11

    del_specifier  ->  type_qualifier .   (rule 11)

    $default	reduce using rule 11 (del_specifier)



state 12

    del_specifier  ->  type_specifier .   (rule 12)

    $default	reduce using rule 12 (del_specifier)



state 13

    external_del  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_del)



state 14

    translation_unit  ->  translation_unit external_del .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 15

    compound_st  ->  '{' . opt_del_list opt_stat_list '}'   (rule 23)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 25 (opt_del_list)

    del_spec	go to state 23
    del_specifiers	go to state 9
    del_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    opt_del_list	go to state 24
    declaration_list	go to state 25
    declaration	go to state 26



state 16

    function_def  ->  function_header compound_st .   (rule 6)

    $default	reduce using rule 6 (function_def)



state 17

    function_name  ->  TIDENT .   (rule 16)
    declarator  ->  TIDENT .   (rule 33)
    declarator  ->  TIDENT . '[' opt_number ']'   (rule 34)

    '[' 	shift, and go to state 27

    '(' 	reduce using rule 16 (function_name)
    $default	reduce using rule 33 (declarator)



state 18

    function_header  ->  del_spec function_name . formal_param   (rule 7)

    '(' 	shift, and go to state 28

    formal_param	go to state 29



state 19

    declaration  ->  del_spec init_del_list . ';'   (rule 28)
    init_del_list  ->  init_del_list . ',' init_declarator   (rule 30)

    ',' 	shift, and go to state 30
    ';' 	shift, and go to state 31



state 20

    init_del_list  ->  init_declarator .   (rule 29)

    $default	reduce using rule 29 (init_del_list)



state 21

    init_declarator  ->  declarator .   (rule 31)
    init_declarator  ->  declarator . '=' TNUMBER   (rule 32)

    '=' 	shift, and go to state 32

    $default	reduce using rule 31 (init_declarator)



state 22

    del_specifiers  ->  del_specifiers del_specifier .   (rule 10)

    $default	reduce using rule 10 (del_specifiers)



state 23

    declaration  ->  del_spec . init_del_list ';'   (rule 28)

    TIDENT	shift, and go to state 33

    init_del_list	go to state 19
    init_declarator	go to state 20
    declarator	go to state 21



state 24

    compound_st  ->  '{' opt_del_list . opt_stat_list '}'   (rule 23)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '{' 	shift, and go to state 15
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    $default	reduce using rule 48 (opt_expression)

    compound_st	go to state 44
    opt_stat_list	go to state 45
    statement_list	go to state 46
    statement	go to state 47
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 25

    opt_del_list  ->  declaration_list .   (rule 24)
    declaration_list  ->  declaration_list . declaration   (rule 27)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 24 (opt_del_list)

    del_spec	go to state 23
    del_specifiers	go to state 9
    del_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    declaration	go to state 64



state 26

    declaration_list  ->  declaration .   (rule 26)

    $default	reduce using rule 26 (declaration_list)



state 27

    declarator  ->  TIDENT '[' . opt_number ']'   (rule 34)

    TNUMBER	shift, and go to state 65

    $default	reduce using rule 36 (opt_number)

    opt_number	go to state 66



state 28

    formal_param  ->  '(' . opt_formal_param ')'   (rule 17)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 19 (opt_formal_param)

    del_spec	go to state 67
    del_specifiers	go to state 9
    del_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    opt_formal_param	go to state 68
    formal_param_list	go to state 69
    param_del	go to state 70



state 29

    function_header  ->  del_spec function_name formal_param .   (rule 7)

    $default	reduce using rule 7 (function_header)



state 30

    init_del_list  ->  init_del_list ',' . init_declarator   (rule 30)

    TIDENT	shift, and go to state 33

    init_declarator	go to state 71
    declarator	go to state 21



state 31

    declaration  ->  del_spec init_del_list ';' .   (rule 28)

    $default	reduce using rule 28 (declaration)



state 32

    init_declarator  ->  declarator '=' . TNUMBER   (rule 32)

    TNUMBER	shift, and go to state 72



state 33

    declarator  ->  TIDENT .   (rule 33)
    declarator  ->  TIDENT . '[' opt_number ']'   (rule 34)

    '[' 	shift, and go to state 27

    $default	reduce using rule 33 (declarator)



state 34

    primary_exp  ->  TIDENT .   (rule 95)

    $default	reduce using rule 95 (primary_exp)



state 35

    primary_exp  ->  TNUMBER .   (rule 96)

    $default	reduce using rule 96 (primary_exp)



state 36

    if_st  ->  TIF . '(' expression ')' statement   (rule 49)
    if_st  ->  TIF . '(' expression ')' statement TELSE statement   (rule 50)

    '(' 	shift, and go to state 73



state 37

    return_st  ->  TRETURN . opt_expression ';'   (rule 52)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    $default	reduce using rule 48 (opt_expression)

    opt_expression	go to state 74
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 38

    while_st  ->  TWHILE . '(' expression ')' statement   (rule 51)

    '(' 	shift, and go to state 75



state 39

    unary_exp  ->  TINC . unary_exp   (rule 83)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    unary_exp	go to state 76
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 40

    unary_exp  ->  TDEC . unary_exp   (rule 84)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    unary_exp	go to state 77
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 41

    primary_exp  ->  '(' . expression ')'   (rule 97)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    expression	go to state 78
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 42

    unary_exp  ->  '-' . unary_exp   (rule 81)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    unary_exp	go to state 79
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 43

    unary_exp  ->  '!' . unary_exp   (rule 82)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    unary_exp	go to state 80
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 44

    statement  ->  compound_st .   (rule 41)

    $default	reduce using rule 41 (statement)



state 45

    compound_st  ->  '{' opt_del_list opt_stat_list . '}'   (rule 23)

    '}' 	shift, and go to state 81



state 46

    opt_stat_list  ->  statement_list . statement   (rule 38)
    statement_list  ->  statement_list . statement   (rule 40)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '{' 	shift, and go to state 15
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    $default	reduce using rule 48 (opt_expression)

    compound_st	go to state 44
    statement	go to state 82
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 47

    opt_stat_list  ->  statement .   (rule 37)
    statement_list  ->  statement .   (rule 39)

    '}' 	reduce using rule 37 (opt_stat_list)
    $default	reduce using rule 39 (statement_list)



state 48

    statement  ->  expression_st .   (rule 42)

    $default	reduce using rule 42 (statement)



state 49

    expression_st  ->  opt_expression . ';'   (rule 46)

    ';' 	shift, and go to state 83



state 50

    statement  ->  if_st .   (rule 43)

    $default	reduce using rule 43 (statement)



state 51

    statement  ->  while_st .   (rule 44)

    $default	reduce using rule 44 (statement)



state 52

    statement  ->  return_st .   (rule 45)

    $default	reduce using rule 45 (statement)



state 53

    opt_expression  ->  expression .   (rule 47)

    $default	reduce using rule 47 (opt_expression)



state 54

    expression  ->  assignment_exp .   (rule 53)

    $default	reduce using rule 53 (expression)



state 55

    assignment_exp  ->  logical_or_exp .   (rule 54)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 62)

    TOR 	shift, and go to state 84

    $default	reduce using rule 54 (assignment_exp)



state 56

    logical_or_exp  ->  logical_and_exp .   (rule 61)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 64)

    TAND	shift, and go to state 85

    $default	reduce using rule 61 (logical_or_exp)



state 57

    logical_and_exp  ->  equality_exp .   (rule 63)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 66)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 67)

    TEQUAL	shift, and go to state 86
    TNOTEQU	shift, and go to state 87

    $default	reduce using rule 63 (logical_and_exp)



state 58

    equality_exp  ->  relational_exp .   (rule 65)
    relational_exp  ->  relational_exp . '>' additive_exp   (rule 69)
    relational_exp  ->  relational_exp . '<' additive_exp   (rule 70)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 71)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 72)

    TGREATE	shift, and go to state 88
    TLESSE	shift, and go to state 89
    '>' 	shift, and go to state 90
    '<' 	shift, and go to state 91

    $default	reduce using rule 65 (equality_exp)



state 59

    relational_exp  ->  additive_exp .   (rule 68)
    additive_exp  ->  additive_exp . '+' multiplicative_exp   (rule 74)
    additive_exp  ->  additive_exp . '-' multiplicative_exp   (rule 75)

    '+' 	shift, and go to state 92
    '-' 	shift, and go to state 93

    $default	reduce using rule 68 (relational_exp)



state 60

    additive_exp  ->  multiplicative_exp .   (rule 73)
    multiplicative_exp  ->  multiplicative_exp . '*' unary_exp   (rule 77)
    multiplicative_exp  ->  multiplicative_exp . '/' unary_exp   (rule 78)
    multiplicative_exp  ->  multiplicative_exp . '%' unary_exp   (rule 79)

    '*' 	shift, and go to state 94
    '/' 	shift, and go to state 95
    '%' 	shift, and go to state 96

    $default	reduce using rule 73 (additive_exp)



state 61

    assignment_exp  ->  unary_exp . '=' assignment_exp   (rule 55)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 56)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 57)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 58)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 59)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 60)
    multiplicative_exp  ->  unary_exp .   (rule 76)

    TADDASSIGN	shift, and go to state 97
    TSUBASSIGN	shift, and go to state 98
    TMULASSIGN	shift, and go to state 99
    TDIVASSIGN	shift, and go to state 100
    TMODASSIGN	shift, and go to state 101
    '=' 	shift, and go to state 102

    $default	reduce using rule 76 (multiplicative_exp)



state 62

    unary_exp  ->  postfix_exp .   (rule 80)
    postfix_exp  ->  postfix_exp . '[' expression ']'   (rule 86)
    postfix_exp  ->  postfix_exp . '(' opt_actual_param ')'   (rule 87)
    postfix_exp  ->  postfix_exp . TINC   (rule 88)
    postfix_exp  ->  postfix_exp . TDEC   (rule 89)

    TINC	shift, and go to state 103
    TDEC	shift, and go to state 104
    '(' 	shift, and go to state 105
    '[' 	shift, and go to state 106

    $default	reduce using rule 80 (unary_exp)



state 63

    postfix_exp  ->  primary_exp .   (rule 85)

    $default	reduce using rule 85 (postfix_exp)



state 64

    declaration_list  ->  declaration_list declaration .   (rule 27)

    $default	reduce using rule 27 (declaration_list)



state 65

    opt_number  ->  TNUMBER .   (rule 35)

    $default	reduce using rule 35 (opt_number)



state 66

    declarator  ->  TIDENT '[' opt_number . ']'   (rule 34)

    ']' 	shift, and go to state 107



state 67

    param_del  ->  del_spec . declarator   (rule 22)

    TIDENT	shift, and go to state 33

    declarator	go to state 108



state 68

    formal_param  ->  '(' opt_formal_param . ')'   (rule 17)

    ')' 	shift, and go to state 109



state 69

    opt_formal_param  ->  formal_param_list .   (rule 18)
    formal_param_list  ->  formal_param_list . ',' param_del   (rule 21)

    ',' 	shift, and go to state 110

    $default	reduce using rule 18 (opt_formal_param)



state 70

    formal_param_list  ->  param_del .   (rule 20)

    $default	reduce using rule 20 (formal_param_list)



state 71

    init_del_list  ->  init_del_list ',' init_declarator .   (rule 30)

    $default	reduce using rule 30 (init_del_list)



state 72

    init_declarator  ->  declarator '=' TNUMBER .   (rule 32)

    $default	reduce using rule 32 (init_declarator)



state 73

    if_st  ->  TIF '(' . expression ')' statement   (rule 49)
    if_st  ->  TIF '(' . expression ')' statement TELSE statement   (rule 50)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    expression	go to state 111
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 74

    return_st  ->  TRETURN opt_expression . ';'   (rule 52)

    ';' 	shift, and go to state 112



state 75

    while_st  ->  TWHILE '(' . expression ')' statement   (rule 51)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    expression	go to state 113
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 76

    unary_exp  ->  TINC unary_exp .   (rule 83)

    $default	reduce using rule 83 (unary_exp)



state 77

    unary_exp  ->  TDEC unary_exp .   (rule 84)

    $default	reduce using rule 84 (unary_exp)



state 78

    primary_exp  ->  '(' expression . ')'   (rule 97)

    ')' 	shift, and go to state 114



state 79

    unary_exp  ->  '-' unary_exp .   (rule 81)

    $default	reduce using rule 81 (unary_exp)



state 80

    unary_exp  ->  '!' unary_exp .   (rule 82)

    $default	reduce using rule 82 (unary_exp)



state 81

    compound_st  ->  '{' opt_del_list opt_stat_list '}' .   (rule 23)

    $default	reduce using rule 23 (compound_st)



state 82

    opt_stat_list  ->  statement_list statement .   (rule 38)
    statement_list  ->  statement_list statement .   (rule 40)

    '}' 	reduce using rule 38 (opt_stat_list)
    $default	reduce using rule 40 (statement_list)



state 83

    expression_st  ->  opt_expression ';' .   (rule 46)

    $default	reduce using rule 46 (expression_st)



state 84

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 62)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    logical_and_exp	go to state 115
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 85

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 64)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    equality_exp	go to state 117
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 86

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 66)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    relational_exp	go to state 118
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 87

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 67)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    relational_exp	go to state 119
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 88

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 71)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    additive_exp	go to state 120
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 89

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 72)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    additive_exp	go to state 121
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 90

    relational_exp  ->  relational_exp '>' . additive_exp   (rule 69)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    additive_exp	go to state 122
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 91

    relational_exp  ->  relational_exp '<' . additive_exp   (rule 70)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    additive_exp	go to state 123
    multiplicative_exp	go to state 60
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 92

    additive_exp  ->  additive_exp '+' . multiplicative_exp   (rule 74)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    multiplicative_exp	go to state 124
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 93

    additive_exp  ->  additive_exp '-' . multiplicative_exp   (rule 75)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    multiplicative_exp	go to state 125
    unary_exp	go to state 116
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 94

    multiplicative_exp  ->  multiplicative_exp '*' . unary_exp   (rule 77)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    unary_exp	go to state 126
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 95

    multiplicative_exp  ->  multiplicative_exp '/' . unary_exp   (rule 78)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    unary_exp	go to state 127
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 96

    multiplicative_exp  ->  multiplicative_exp '%' . unary_exp   (rule 79)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    unary_exp	go to state 128
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 97

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 56)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    assignment_exp	go to state 129
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 98

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 57)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    assignment_exp	go to state 130
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 99

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 58)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    assignment_exp	go to state 131
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 100

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 59)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    assignment_exp	go to state 132
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 101

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 60)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    assignment_exp	go to state 133
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 102

    assignment_exp  ->  unary_exp '=' . assignment_exp   (rule 55)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    assignment_exp	go to state 134
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 103

    postfix_exp  ->  postfix_exp TINC .   (rule 88)

    $default	reduce using rule 88 (postfix_exp)



state 104

    postfix_exp  ->  postfix_exp TDEC .   (rule 89)

    $default	reduce using rule 89 (postfix_exp)



state 105

    postfix_exp  ->  postfix_exp '(' . opt_actual_param ')'   (rule 87)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    $default	reduce using rule 91 (opt_actual_param)

    assignment_exp	go to state 135
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    opt_actual_param	go to state 136
    actual_param	go to state 137
    actual_param_list	go to state 138
    primary_exp	go to state 63



state 106

    postfix_exp  ->  postfix_exp '[' . expression ']'   (rule 86)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    expression	go to state 139
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 107

    declarator  ->  TIDENT '[' opt_number ']' .   (rule 34)

    $default	reduce using rule 34 (declarator)



state 108

    param_del  ->  del_spec declarator .   (rule 22)

    $default	reduce using rule 22 (param_del)



state 109

    formal_param  ->  '(' opt_formal_param ')' .   (rule 17)

    $default	reduce using rule 17 (formal_param)



state 110

    formal_param_list  ->  formal_param_list ',' . param_del   (rule 21)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    del_spec	go to state 67
    del_specifiers	go to state 9
    del_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    param_del	go to state 140



state 111

    if_st  ->  TIF '(' expression . ')' statement   (rule 49)
    if_st  ->  TIF '(' expression . ')' statement TELSE statement   (rule 50)

    ')' 	shift, and go to state 141



state 112

    return_st  ->  TRETURN opt_expression ';' .   (rule 52)

    $default	reduce using rule 52 (return_st)



state 113

    while_st  ->  TWHILE '(' expression . ')' statement   (rule 51)

    ')' 	shift, and go to state 142



state 114

    primary_exp  ->  '(' expression ')' .   (rule 97)

    $default	reduce using rule 97 (primary_exp)



state 115

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 62)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 64)

    TAND	shift, and go to state 85

    $default	reduce using rule 62 (logical_or_exp)



state 116

    multiplicative_exp  ->  unary_exp .   (rule 76)

    $default	reduce using rule 76 (multiplicative_exp)



state 117

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 64)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 66)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 67)

    TEQUAL	shift, and go to state 86
    TNOTEQU	shift, and go to state 87

    $default	reduce using rule 64 (logical_and_exp)



state 118

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 66)
    relational_exp  ->  relational_exp . '>' additive_exp   (rule 69)
    relational_exp  ->  relational_exp . '<' additive_exp   (rule 70)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 71)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 72)

    TGREATE	shift, and go to state 88
    TLESSE	shift, and go to state 89
    '>' 	shift, and go to state 90
    '<' 	shift, and go to state 91

    $default	reduce using rule 66 (equality_exp)



state 119

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 67)
    relational_exp  ->  relational_exp . '>' additive_exp   (rule 69)
    relational_exp  ->  relational_exp . '<' additive_exp   (rule 70)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 71)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 72)

    TGREATE	shift, and go to state 88
    TLESSE	shift, and go to state 89
    '>' 	shift, and go to state 90
    '<' 	shift, and go to state 91

    $default	reduce using rule 67 (equality_exp)



state 120

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 71)
    additive_exp  ->  additive_exp . '+' multiplicative_exp   (rule 74)
    additive_exp  ->  additive_exp . '-' multiplicative_exp   (rule 75)

    '+' 	shift, and go to state 92
    '-' 	shift, and go to state 93

    $default	reduce using rule 71 (relational_exp)



state 121

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 72)
    additive_exp  ->  additive_exp . '+' multiplicative_exp   (rule 74)
    additive_exp  ->  additive_exp . '-' multiplicative_exp   (rule 75)

    '+' 	shift, and go to state 92
    '-' 	shift, and go to state 93

    $default	reduce using rule 72 (relational_exp)



state 122

    relational_exp  ->  relational_exp '>' additive_exp .   (rule 69)
    additive_exp  ->  additive_exp . '+' multiplicative_exp   (rule 74)
    additive_exp  ->  additive_exp . '-' multiplicative_exp   (rule 75)

    '+' 	shift, and go to state 92
    '-' 	shift, and go to state 93

    $default	reduce using rule 69 (relational_exp)



state 123

    relational_exp  ->  relational_exp '<' additive_exp .   (rule 70)
    additive_exp  ->  additive_exp . '+' multiplicative_exp   (rule 74)
    additive_exp  ->  additive_exp . '-' multiplicative_exp   (rule 75)

    '+' 	shift, and go to state 92
    '-' 	shift, and go to state 93

    $default	reduce using rule 70 (relational_exp)



state 124

    additive_exp  ->  additive_exp '+' multiplicative_exp .   (rule 74)
    multiplicative_exp  ->  multiplicative_exp . '*' unary_exp   (rule 77)
    multiplicative_exp  ->  multiplicative_exp . '/' unary_exp   (rule 78)
    multiplicative_exp  ->  multiplicative_exp . '%' unary_exp   (rule 79)

    '*' 	shift, and go to state 94
    '/' 	shift, and go to state 95
    '%' 	shift, and go to state 96

    $default	reduce using rule 74 (additive_exp)



state 125

    additive_exp  ->  additive_exp '-' multiplicative_exp .   (rule 75)
    multiplicative_exp  ->  multiplicative_exp . '*' unary_exp   (rule 77)
    multiplicative_exp  ->  multiplicative_exp . '/' unary_exp   (rule 78)
    multiplicative_exp  ->  multiplicative_exp . '%' unary_exp   (rule 79)

    '*' 	shift, and go to state 94
    '/' 	shift, and go to state 95
    '%' 	shift, and go to state 96

    $default	reduce using rule 75 (additive_exp)



state 126

    multiplicative_exp  ->  multiplicative_exp '*' unary_exp .   (rule 77)

    $default	reduce using rule 77 (multiplicative_exp)



state 127

    multiplicative_exp  ->  multiplicative_exp '/' unary_exp .   (rule 78)

    $default	reduce using rule 78 (multiplicative_exp)



state 128

    multiplicative_exp  ->  multiplicative_exp '%' unary_exp .   (rule 79)

    $default	reduce using rule 79 (multiplicative_exp)



state 129

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 56)

    $default	reduce using rule 56 (assignment_exp)



state 130

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 57)

    $default	reduce using rule 57 (assignment_exp)



state 131

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 58)

    $default	reduce using rule 58 (assignment_exp)



state 132

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 59)

    $default	reduce using rule 59 (assignment_exp)



state 133

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 60)

    $default	reduce using rule 60 (assignment_exp)



state 134

    assignment_exp  ->  unary_exp '=' assignment_exp .   (rule 55)

    $default	reduce using rule 55 (assignment_exp)



state 135

    actual_param_list  ->  assignment_exp .   (rule 93)

    $default	reduce using rule 93 (actual_param_list)



state 136

    postfix_exp  ->  postfix_exp '(' opt_actual_param . ')'   (rule 87)

    ')' 	shift, and go to state 143



state 137

    opt_actual_param  ->  actual_param .   (rule 90)

    $default	reduce using rule 90 (opt_actual_param)



state 138

    actual_param  ->  actual_param_list .   (rule 92)
    actual_param_list  ->  actual_param_list . ',' assignment_exp   (rule 94)

    ',' 	shift, and go to state 144

    $default	reduce using rule 92 (actual_param)



state 139

    postfix_exp  ->  postfix_exp '[' expression . ']'   (rule 86)

    ']' 	shift, and go to state 145



state 140

    formal_param_list  ->  formal_param_list ',' param_del .   (rule 21)

    $default	reduce using rule 21 (formal_param_list)



state 141

    if_st  ->  TIF '(' expression ')' . statement   (rule 49)
    if_st  ->  TIF '(' expression ')' . statement TELSE statement   (rule 50)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '{' 	shift, and go to state 15
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    $default	reduce using rule 48 (opt_expression)

    compound_st	go to state 44
    statement	go to state 146
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 142

    while_st  ->  TWHILE '(' expression ')' . statement   (rule 51)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '{' 	shift, and go to state 15
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    $default	reduce using rule 48 (opt_expression)

    compound_st	go to state 44
    statement	go to state 147
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 143

    postfix_exp  ->  postfix_exp '(' opt_actual_param ')' .   (rule 87)

    $default	reduce using rule 87 (postfix_exp)



state 144

    actual_param_list  ->  actual_param_list ',' . assignment_exp   (rule 94)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    assignment_exp	go to state 148
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 145

    postfix_exp  ->  postfix_exp '[' expression ']' .   (rule 86)

    $default	reduce using rule 86 (postfix_exp)



state 146

    if_st  ->  TIF '(' expression ')' statement .   (rule 49)
    if_st  ->  TIF '(' expression ')' statement . TELSE statement   (rule 50)

    TELSE	shift, and go to state 149

    TELSE	[reduce using rule 49 (if_st)]
    $default	reduce using rule 49 (if_st)



state 147

    while_st  ->  TWHILE '(' expression ')' statement .   (rule 51)

    $default	reduce using rule 51 (while_st)



state 148

    actual_param_list  ->  actual_param_list ',' assignment_exp .   (rule 94)

    $default	reduce using rule 94 (actual_param_list)



state 149

    if_st  ->  TIF '(' expression ')' statement TELSE . statement   (rule 50)

    TIDENT	shift, and go to state 34
    TNUMBER	shift, and go to state 35
    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    '(' 	shift, and go to state 41
    '{' 	shift, and go to state 15
    '-' 	shift, and go to state 42
    '!' 	shift, and go to state 43

    $default	reduce using rule 48 (opt_expression)

    compound_st	go to state 44
    statement	go to state 150
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 150

    if_st  ->  TIF '(' expression ')' statement TELSE statement .   (rule 50)

    $default	reduce using rule 50 (if_st)



state 151

    $   	go to state 152



state 152

    $   	go to state 153



state 153

    $default	accept
