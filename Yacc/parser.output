

Terminals which are not used:

   TEIF
   TEOF
   TERROR
   TCOMMENT
   TFNUMBER
   TFLOAT


Conflict in state 167 between rule 64 and token TELSE resolved as shift.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> type_only_function_def
rule 6    external_dcl -> declaration
rule 7    function_def -> function_header compound_st
rule 8    function_header -> dcl_spec function_name formal_param
rule 9    type_only_function_def -> type_only_function_header TSEMI
rule 10   type_only_function_def -> type_only_function_header TCOMMA type_skip_function_list TSEMI
rule 11   type_skip_function_list -> type_skip_function_header
rule 12   type_skip_function_list -> type_skip_function_list TCOMMA type_skip_function_header
rule 13   type_skip_function_header -> function_name type_only_param
rule 14   type_skip_function_header -> function_name formal_param
rule 15   type_only_function_header -> dcl_spec function_name type_only_param
rule 16   type_only_function_header -> dcl_spec function_name formal_param
rule 17   type_only_param -> TLPAREN type_only_param_list TRPAREN
rule 18   type_only_param_list -> type_only_param_dcl
rule 19   type_only_param_list -> type_only_param_list TCOMMA type_only_param_dcl
rule 20   type_only_param_list -> type_only_param_list TCOMMA param_dcl
rule 21   type_only_param_list -> formal_param_list TCOMMA type_only_param_dcl
rule 22   type_only_param_dcl -> dcl_specifier
rule 23   dcl_spec -> dcl_specifiers
rule 24   dcl_specifiers -> dcl_specifier
rule 25   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 26   dcl_specifier -> type_qualifier
rule 27   dcl_specifier -> type_specifier
rule 28   type_qualifier -> TCONST
rule 29   type_specifier -> TINT
rule 30   type_specifier -> TVOID
rule 31   function_name -> TIDENT
rule 32   formal_param -> TLPAREN opt_formal_param TRPAREN
rule 33   opt_formal_param -> formal_param_list
rule 34   opt_formal_param ->		/* empty */
rule 35   formal_param_list -> param_dcl
rule 36   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 37   param_dcl -> dcl_specifier declarator
rule 38   compound_st -> TLBRACE opt_dcl_list opt_stat_list TRBRACE
rule 39   opt_dcl_list -> declaration_list
rule 40   opt_dcl_list ->		/* empty */
rule 41   declaration_list -> declaration
rule 42   declaration_list -> declaration_list declaration
rule 43   declaration -> dcl_spec init_dcl_list TSEMI
rule 44   init_dcl_list -> init_declarator
rule 45   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 46   init_declarator -> declarator
rule 47   init_declarator -> declarator TASSIGN TNUMBER
rule 48   declarator -> TIDENT
rule 49   declarator -> TIDENT TLBRACKET opt_number TRBRACKET
rule 50   opt_number -> TNUMBER
rule 51   opt_number ->		/* empty */
rule 52   opt_stat_list -> statement_list
rule 53   opt_stat_list ->		/* empty */
rule 54   statement_list -> statement
rule 55   statement_list -> statement_list statement
rule 56   statement -> compound_st
rule 57   statement -> expression_st
rule 58   statement -> if_st
rule 59   statement -> while_st
rule 60   statement -> return_st
rule 61   expression_st -> opt_expression TSEMI
rule 62   opt_expression -> expression
rule 63   opt_expression ->		/* empty */
rule 64   if_st -> TIF TLPAREN expression TRPAREN statement
rule 65   if_st -> TIF TLPAREN expression TRPAREN statement TELSE statement
rule 66   while_st -> TWHILE TLPAREN expression TRPAREN statement
rule 67   return_st -> TRETURN opt_expression TSEMI
rule 68   expression -> assignment_exp
rule 69   assignment_exp -> logical_or_exp
rule 70   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 71   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 72   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 73   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 74   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 75   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 76   logical_or_exp -> logical_and_exp
rule 77   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 78   logical_and_exp -> equality_exp
rule 79   logical_and_exp -> logical_and_exp TAND equality_exp
rule 80   equality_exp -> relational_exp
rule 81   equality_exp -> equality_exp TEQUAL relational_exp
rule 82   equality_exp -> equality_exp TNOTEQU relational_exp
rule 83   relational_exp -> additive_exp
rule 84   relational_exp -> relational_exp TGREAT additive_exp
rule 85   relational_exp -> relational_exp TLESS additive_exp
rule 86   relational_exp -> relational_exp TGREATE additive_exp
rule 87   relational_exp -> relational_exp TLESSE additive_exp
rule 88   additive_exp -> multiplicative_exp
rule 89   additive_exp -> additive_exp TADD multiplicative_exp
rule 90   additive_exp -> additive_exp TSUB multiplicative_exp
rule 91   multiplicative_exp -> unary_exp
rule 92   multiplicative_exp -> multiplicative_exp TMUL unary_exp
rule 93   multiplicative_exp -> multiplicative_exp TDIV unary_exp
rule 94   multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 95   unary_exp -> postfix_exp
rule 96   unary_exp -> TSUB unary_exp
rule 97   unary_exp -> TNOT unary_exp
rule 98   unary_exp -> TINC unary_exp
rule 99   unary_exp -> TDEC unary_exp
rule 100  postfix_exp -> primary_exp
rule 101  postfix_exp -> postfix_exp TLBRACKET expression TRBRACKET
rule 102  postfix_exp -> postfix_exp TLPAREN opt_actual_param TRPAREN
rule 103  postfix_exp -> postfix_exp TINC
rule 104  postfix_exp -> postfix_exp TDEC
rule 105  opt_actual_param -> actual_param
rule 106  opt_actual_param ->		/* empty */
rule 107  actual_param -> actual_param_list
rule 108  actual_param_list -> assignment_exp
rule 109  actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 110  primary_exp -> TIDENT
rule 111  primary_exp -> TNUMBER
rule 112  primary_exp -> TLPAREN expression TRPAREN

Terminals, with rules where they appear

$ (-1)
error (256)
TIDENT (258) 31 48 49 110
TNUMBER (259) 47 50 111
TCONST (260) 28
TELSE (261) 65
TIF (262) 64 65
TEIF (263)
TINT (264) 29
TRETURN (265) 67
TVOID (266) 30
TWHILE (267) 66
TADDASSIGN (268) 71
TSUBASSIGN (269) 72
TMULASSIGN (270) 73
TDIVASSIGN (271) 74
TMODASSIGN (272) 75
TOR (273) 77
TAND (274) 79
TEQUAL (275) 81
TNOTEQU (276) 82
TGREATE (277) 86
TLESSE (278) 87
TINC (279) 98 103
TDEC (280) 99 104
TEOF (281)
TERROR (282)
TCOMMENT (283)
TFNUMBER (284)
TFLOAT (285)
TADD (286) 89
TSUB (287) 90 96
TMUL (288) 92
TDIV (289) 93
TMOD (290) 94
TASSIGN (291) 47 70
TNOT (292) 97
TLESS (293) 85
TGREAT (294) 84
TLPAREN (295) 17 32 64 65 66 102 112
TRPAREN (296) 17 32 64 65 66 102 112
TCOMMA (297) 10 12 19 20 21 36 45 109
TLBRACE (298) 38
TRBRACE (299) 38
TLBRACKET (300) 49 101
TRBRACKET (301) 49 101
TSEMI (302) 9 10 43 61 67
LOWER_THAN_ELSE (303)

Nonterminals, with rules where they appear

mini_c (49)
    on left: 1
translation_unit (50)
    on left: 2 3, on right: 1 3
external_dcl (51)
    on left: 4 5 6, on right: 2 3
function_def (52)
    on left: 7, on right: 4
function_header (53)
    on left: 8, on right: 7
type_only_function_def (54)
    on left: 9 10, on right: 5
type_skip_function_list (55)
    on left: 11 12, on right: 10 12
type_skip_function_header (56)
    on left: 13 14, on right: 11 12
type_only_function_header (57)
    on left: 15 16, on right: 9 10
type_only_param (58)
    on left: 17, on right: 13 15
type_only_param_list (59)
    on left: 18 19 20 21, on right: 17 19 20
type_only_param_dcl (60)
    on left: 22, on right: 18 19 21
dcl_spec (61)
    on left: 23, on right: 8 15 16 43
dcl_specifiers (62)
    on left: 24 25, on right: 23 25
dcl_specifier (63)
    on left: 26 27, on right: 22 24 25 37
type_qualifier (64)
    on left: 28, on right: 26
type_specifier (65)
    on left: 29 30, on right: 27
function_name (66)
    on left: 31, on right: 8 13 14 15 16
formal_param (67)
    on left: 32, on right: 8 14 16
opt_formal_param (68)
    on left: 33 34, on right: 32
formal_param_list (69)
    on left: 35 36, on right: 21 33 36
param_dcl (70)
    on left: 37, on right: 20 35 36
compound_st (71)
    on left: 38, on right: 7 56
opt_dcl_list (72)
    on left: 39 40, on right: 38
declaration_list (73)
    on left: 41 42, on right: 39 42
declaration (74)
    on left: 43, on right: 6 41 42
init_dcl_list (75)
    on left: 44 45, on right: 43 45
init_declarator (76)
    on left: 46 47, on right: 44 45
declarator (77)
    on left: 48 49, on right: 37 46 47
opt_number (78)
    on left: 50 51, on right: 49
opt_stat_list (79)
    on left: 52 53, on right: 38
statement_list (80)
    on left: 54 55, on right: 52 55
statement (81)
    on left: 56 57 58 59 60, on right: 54 55 64 65 66
expression_st (82)
    on left: 61, on right: 57
opt_expression (83)
    on left: 62 63, on right: 61 67
if_st (84)
    on left: 64 65, on right: 58
while_st (85)
    on left: 66, on right: 59
return_st (86)
    on left: 67, on right: 60
expression (87)
    on left: 68, on right: 62 64 65 66 101 112
assignment_exp (88)
    on left: 69 70 71 72 73 74 75, on right: 68 70 71 72 73 74 75 108
    109
logical_or_exp (89)
    on left: 76 77, on right: 69 77
logical_and_exp (90)
    on left: 78 79, on right: 76 77 79
equality_exp (91)
    on left: 80 81 82, on right: 78 79 81 82
relational_exp (92)
    on left: 83 84 85 86 87, on right: 80 81 82 84 85 86 87
additive_exp (93)
    on left: 88 89 90, on right: 83 84 85 86 87 89 90
multiplicative_exp (94)
    on left: 91 92 93 94, on right: 88 89 90 92 93 94
unary_exp (95)
    on left: 95 96 97 98 99, on right: 70 71 72 73 74 75 91 92 93 94
    96 97 98 99
postfix_exp (96)
    on left: 100 101 102 103 104, on right: 95 101 102 103 104
opt_actual_param (97)
    on left: 105 106, on right: 102
actual_param (98)
    on left: 107, on right: 105
actual_param_list (99)
    on left: 108 109, on right: 107 109
primary_exp (100)
    on left: 110 111 112, on right: 100


state 0

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    mini_c	go to state 172
    translation_unit	go to state 4
    external_dcl	go to state 5
    function_def	go to state 6
    function_header	go to state 7
    type_only_function_def	go to state 8
    type_only_function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 1

    type_qualifier  ->  TCONST .   (rule 28)

    $default	reduce using rule 28 (type_qualifier)



state 2

    type_specifier  ->  TINT .   (rule 29)

    $default	reduce using rule 29 (type_specifier)



state 3

    type_specifier  ->  TVOID .   (rule 30)

    $default	reduce using rule 30 (type_specifier)



state 4

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 1 (mini_c)

    external_dcl	go to state 16
    function_def	go to state 6
    function_header	go to state 7
    type_only_function_def	go to state 8
    type_only_function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 5

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 6

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 7

    function_def  ->  function_header . compound_st   (rule 7)

    TLBRACE	shift, and go to state 17

    compound_st	go to state 18



state 8

    external_dcl  ->  type_only_function_def .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 9

    type_only_function_def  ->  type_only_function_header . TSEMI   (rule 9)
    type_only_function_def  ->  type_only_function_header . TCOMMA type_skip_function_list TSEMI   (rule 10)

    TCOMMA	shift, and go to state 19
    TSEMI	shift, and go to state 20



state 10

    function_header  ->  dcl_spec . function_name formal_param   (rule 8)
    type_only_function_header  ->  dcl_spec . function_name type_only_param   (rule 15)
    type_only_function_header  ->  dcl_spec . function_name formal_param   (rule 16)
    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 43)

    TIDENT	shift, and go to state 21

    function_name	go to state 22
    init_dcl_list	go to state 23
    init_declarator	go to state 24
    declarator	go to state 25



state 11

    dcl_spec  ->  dcl_specifiers .   (rule 23)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 25)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 23 (dcl_spec)

    dcl_specifier	go to state 26
    type_qualifier	go to state 13
    type_specifier	go to state 14



state 12

    dcl_specifiers  ->  dcl_specifier .   (rule 24)

    $default	reduce using rule 24 (dcl_specifiers)



state 13

    dcl_specifier  ->  type_qualifier .   (rule 26)

    $default	reduce using rule 26 (dcl_specifier)



state 14

    dcl_specifier  ->  type_specifier .   (rule 27)

    $default	reduce using rule 27 (dcl_specifier)



state 15

    external_dcl  ->  declaration .   (rule 6)

    $default	reduce using rule 6 (external_dcl)



state 16

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 17

    compound_st  ->  TLBRACE . opt_dcl_list opt_stat_list TRBRACE   (rule 38)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 40 (opt_dcl_list)

    dcl_spec	go to state 27
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_dcl_list	go to state 28
    declaration_list	go to state 29
    declaration	go to state 30



state 18

    function_def  ->  function_header compound_st .   (rule 7)

    $default	reduce using rule 7 (function_def)



state 19

    type_only_function_def  ->  type_only_function_header TCOMMA . type_skip_function_list TSEMI   (rule 10)

    TIDENT	shift, and go to state 31

    type_skip_function_list	go to state 32
    type_skip_function_header	go to state 33
    function_name	go to state 34



state 20

    type_only_function_def  ->  type_only_function_header TSEMI .   (rule 9)

    $default	reduce using rule 9 (type_only_function_def)



state 21

    function_name  ->  TIDENT .   (rule 31)
    declarator  ->  TIDENT .   (rule 48)
    declarator  ->  TIDENT . TLBRACKET opt_number TRBRACKET   (rule 49)

    TLBRACKET	shift, and go to state 35

    TLPAREN	reduce using rule 31 (function_name)
    $default	reduce using rule 48 (declarator)



state 22

    function_header  ->  dcl_spec function_name . formal_param   (rule 8)
    type_only_function_header  ->  dcl_spec function_name . type_only_param   (rule 15)
    type_only_function_header  ->  dcl_spec function_name . formal_param   (rule 16)

    TLPAREN	shift, and go to state 36

    type_only_param	go to state 37
    formal_param	go to state 38



state 23

    declaration  ->  dcl_spec init_dcl_list . TSEMI   (rule 43)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 45)

    TCOMMA	shift, and go to state 39
    TSEMI	shift, and go to state 40



state 24

    init_dcl_list  ->  init_declarator .   (rule 44)

    $default	reduce using rule 44 (init_dcl_list)



state 25

    init_declarator  ->  declarator .   (rule 46)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 47)

    TASSIGN	shift, and go to state 41

    $default	reduce using rule 46 (init_declarator)



state 26

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 25)

    $default	reduce using rule 25 (dcl_specifiers)



state 27

    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 43)

    TIDENT	shift, and go to state 42

    init_dcl_list	go to state 23
    init_declarator	go to state 24
    declarator	go to state 25



state 28

    compound_st  ->  TLBRACE opt_dcl_list . opt_stat_list TRBRACE   (rule 38)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TIF 	shift, and go to state 45
    TRETURN	shift, and go to state 46
    TWHILE	shift, and go to state 47
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52
    TLBRACE	shift, and go to state 17

    TSEMI	reduce using rule 63 (opt_expression)
    $default	reduce using rule 53 (opt_stat_list)

    compound_st	go to state 53
    opt_stat_list	go to state 54
    statement_list	go to state 55
    statement	go to state 56
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 29

    opt_dcl_list  ->  declaration_list .   (rule 39)
    declaration_list  ->  declaration_list . declaration   (rule 42)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 39 (opt_dcl_list)

    dcl_spec	go to state 27
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 73



state 30

    declaration_list  ->  declaration .   (rule 41)

    $default	reduce using rule 41 (declaration_list)



state 31

    function_name  ->  TIDENT .   (rule 31)

    $default	reduce using rule 31 (function_name)



state 32

    type_only_function_def  ->  type_only_function_header TCOMMA type_skip_function_list . TSEMI   (rule 10)
    type_skip_function_list  ->  type_skip_function_list . TCOMMA type_skip_function_header   (rule 12)

    TCOMMA	shift, and go to state 74
    TSEMI	shift, and go to state 75



state 33

    type_skip_function_list  ->  type_skip_function_header .   (rule 11)

    $default	reduce using rule 11 (type_skip_function_list)



state 34

    type_skip_function_header  ->  function_name . type_only_param   (rule 13)
    type_skip_function_header  ->  function_name . formal_param   (rule 14)

    TLPAREN	shift, and go to state 36

    type_only_param	go to state 76
    formal_param	go to state 77



state 35

    declarator  ->  TIDENT TLBRACKET . opt_number TRBRACKET   (rule 49)

    TNUMBER	shift, and go to state 78

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 79



state 36

    type_only_param  ->  TLPAREN . type_only_param_list TRPAREN   (rule 17)
    formal_param  ->  TLPAREN . opt_formal_param TRPAREN   (rule 32)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 34 (opt_formal_param)

    type_only_param_list	go to state 80
    type_only_param_dcl	go to state 81
    dcl_specifier	go to state 82
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_formal_param	go to state 83
    formal_param_list	go to state 84
    param_dcl	go to state 85



state 37

    type_only_function_header  ->  dcl_spec function_name type_only_param .   (rule 15)

    $default	reduce using rule 15 (type_only_function_header)



state 38

    function_header  ->  dcl_spec function_name formal_param .   (rule 8)
    type_only_function_header  ->  dcl_spec function_name formal_param .   (rule 16)

    TLBRACE	reduce using rule 8 (function_header)
    $default	reduce using rule 16 (type_only_function_header)



state 39

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 45)

    TIDENT	shift, and go to state 42

    init_declarator	go to state 86
    declarator	go to state 25



state 40

    declaration  ->  dcl_spec init_dcl_list TSEMI .   (rule 43)

    $default	reduce using rule 43 (declaration)



state 41

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 47)

    TNUMBER	shift, and go to state 87



state 42

    declarator  ->  TIDENT .   (rule 48)
    declarator  ->  TIDENT . TLBRACKET opt_number TRBRACKET   (rule 49)

    TLBRACKET	shift, and go to state 35

    $default	reduce using rule 48 (declarator)



state 43

    primary_exp  ->  TIDENT .   (rule 110)

    $default	reduce using rule 110 (primary_exp)



state 44

    primary_exp  ->  TNUMBER .   (rule 111)

    $default	reduce using rule 111 (primary_exp)



state 45

    if_st  ->  TIF . TLPAREN expression TRPAREN statement   (rule 64)
    if_st  ->  TIF . TLPAREN expression TRPAREN statement TELSE statement   (rule 65)

    TLPAREN	shift, and go to state 88



state 46

    return_st  ->  TRETURN . opt_expression TSEMI   (rule 67)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    $default	reduce using rule 63 (opt_expression)

    opt_expression	go to state 89
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 47

    while_st  ->  TWHILE . TLPAREN expression TRPAREN statement   (rule 66)

    TLPAREN	shift, and go to state 90



state 48

    unary_exp  ->  TINC . unary_exp   (rule 98)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    unary_exp	go to state 91
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 49

    unary_exp  ->  TDEC . unary_exp   (rule 99)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    unary_exp	go to state 92
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 50

    unary_exp  ->  TSUB . unary_exp   (rule 96)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    unary_exp	go to state 93
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 51

    unary_exp  ->  TNOT . unary_exp   (rule 97)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    unary_exp	go to state 94
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 52

    primary_exp  ->  TLPAREN . expression TRPAREN   (rule 112)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    expression	go to state 95
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 53

    statement  ->  compound_st .   (rule 56)

    $default	reduce using rule 56 (statement)



state 54

    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list . TRBRACE   (rule 38)

    TRBRACE	shift, and go to state 96



state 55

    opt_stat_list  ->  statement_list .   (rule 52)
    statement_list  ->  statement_list . statement   (rule 55)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TIF 	shift, and go to state 45
    TRETURN	shift, and go to state 46
    TWHILE	shift, and go to state 47
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52
    TLBRACE	shift, and go to state 17

    TSEMI	reduce using rule 63 (opt_expression)
    $default	reduce using rule 52 (opt_stat_list)

    compound_st	go to state 53
    statement	go to state 97
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 56

    statement_list  ->  statement .   (rule 54)

    $default	reduce using rule 54 (statement_list)



state 57

    statement  ->  expression_st .   (rule 57)

    $default	reduce using rule 57 (statement)



state 58

    expression_st  ->  opt_expression . TSEMI   (rule 61)

    TSEMI	shift, and go to state 98



state 59

    statement  ->  if_st .   (rule 58)

    $default	reduce using rule 58 (statement)



state 60

    statement  ->  while_st .   (rule 59)

    $default	reduce using rule 59 (statement)



state 61

    statement  ->  return_st .   (rule 60)

    $default	reduce using rule 60 (statement)



state 62

    opt_expression  ->  expression .   (rule 62)

    $default	reduce using rule 62 (opt_expression)



state 63

    expression  ->  assignment_exp .   (rule 68)

    $default	reduce using rule 68 (expression)



state 64

    assignment_exp  ->  logical_or_exp .   (rule 69)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 77)

    TOR 	shift, and go to state 99

    $default	reduce using rule 69 (assignment_exp)



state 65

    logical_or_exp  ->  logical_and_exp .   (rule 76)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 79)

    TAND	shift, and go to state 100

    $default	reduce using rule 76 (logical_or_exp)



state 66

    logical_and_exp  ->  equality_exp .   (rule 78)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 81)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 82)

    TEQUAL	shift, and go to state 101
    TNOTEQU	shift, and go to state 102

    $default	reduce using rule 78 (logical_and_exp)



state 67

    equality_exp  ->  relational_exp .   (rule 80)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 84)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 85)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 86)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 87)

    TGREATE	shift, and go to state 103
    TLESSE	shift, and go to state 104
    TLESS	shift, and go to state 105
    TGREAT	shift, and go to state 106

    $default	reduce using rule 80 (equality_exp)



state 68

    relational_exp  ->  additive_exp .   (rule 83)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 89)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 90)

    TADD	shift, and go to state 107
    TSUB	shift, and go to state 108

    $default	reduce using rule 83 (relational_exp)



state 69

    additive_exp  ->  multiplicative_exp .   (rule 88)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 92)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 93)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 94)

    TMUL	shift, and go to state 109
    TDIV	shift, and go to state 110
    TMOD	shift, and go to state 111

    $default	reduce using rule 88 (additive_exp)



state 70

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 70)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 71)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 72)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 73)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 74)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 75)
    multiplicative_exp  ->  unary_exp .   (rule 91)

    TADDASSIGN	shift, and go to state 112
    TSUBASSIGN	shift, and go to state 113
    TMULASSIGN	shift, and go to state 114
    TDIVASSIGN	shift, and go to state 115
    TMODASSIGN	shift, and go to state 116
    TASSIGN	shift, and go to state 117

    $default	reduce using rule 91 (multiplicative_exp)



state 71

    unary_exp  ->  postfix_exp .   (rule 95)
    postfix_exp  ->  postfix_exp . TLBRACKET expression TRBRACKET   (rule 101)
    postfix_exp  ->  postfix_exp . TLPAREN opt_actual_param TRPAREN   (rule 102)
    postfix_exp  ->  postfix_exp . TINC   (rule 103)
    postfix_exp  ->  postfix_exp . TDEC   (rule 104)

    TINC	shift, and go to state 118
    TDEC	shift, and go to state 119
    TLPAREN	shift, and go to state 120
    TLBRACKET	shift, and go to state 121

    $default	reduce using rule 95 (unary_exp)



state 72

    postfix_exp  ->  primary_exp .   (rule 100)

    $default	reduce using rule 100 (postfix_exp)



state 73

    declaration_list  ->  declaration_list declaration .   (rule 42)

    $default	reduce using rule 42 (declaration_list)



state 74

    type_skip_function_list  ->  type_skip_function_list TCOMMA . type_skip_function_header   (rule 12)

    TIDENT	shift, and go to state 31

    type_skip_function_header	go to state 122
    function_name	go to state 34



state 75

    type_only_function_def  ->  type_only_function_header TCOMMA type_skip_function_list TSEMI .   (rule 10)

    $default	reduce using rule 10 (type_only_function_def)



state 76

    type_skip_function_header  ->  function_name type_only_param .   (rule 13)

    $default	reduce using rule 13 (type_skip_function_header)



state 77

    type_skip_function_header  ->  function_name formal_param .   (rule 14)

    $default	reduce using rule 14 (type_skip_function_header)



state 78

    opt_number  ->  TNUMBER .   (rule 50)

    $default	reduce using rule 50 (opt_number)



state 79

    declarator  ->  TIDENT TLBRACKET opt_number . TRBRACKET   (rule 49)

    TRBRACKET	shift, and go to state 123



state 80

    type_only_param  ->  TLPAREN type_only_param_list . TRPAREN   (rule 17)
    type_only_param_list  ->  type_only_param_list . TCOMMA type_only_param_dcl   (rule 19)
    type_only_param_list  ->  type_only_param_list . TCOMMA param_dcl   (rule 20)

    TRPAREN	shift, and go to state 124
    TCOMMA	shift, and go to state 125



state 81

    type_only_param_list  ->  type_only_param_dcl .   (rule 18)

    $default	reduce using rule 18 (type_only_param_list)



state 82

    type_only_param_dcl  ->  dcl_specifier .   (rule 22)
    param_dcl  ->  dcl_specifier . declarator   (rule 37)

    TIDENT	shift, and go to state 42

    $default	reduce using rule 22 (type_only_param_dcl)

    declarator	go to state 126



state 83

    formal_param  ->  TLPAREN opt_formal_param . TRPAREN   (rule 32)

    TRPAREN	shift, and go to state 127



state 84

    type_only_param_list  ->  formal_param_list . TCOMMA type_only_param_dcl   (rule 21)
    opt_formal_param  ->  formal_param_list .   (rule 33)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 36)

    TCOMMA	shift, and go to state 128

    $default	reduce using rule 33 (opt_formal_param)



state 85

    formal_param_list  ->  param_dcl .   (rule 35)

    $default	reduce using rule 35 (formal_param_list)



state 86

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 45)

    $default	reduce using rule 45 (init_dcl_list)



state 87

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 47)

    $default	reduce using rule 47 (init_declarator)



state 88

    if_st  ->  TIF TLPAREN . expression TRPAREN statement   (rule 64)
    if_st  ->  TIF TLPAREN . expression TRPAREN statement TELSE statement   (rule 65)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    expression	go to state 129
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 89

    return_st  ->  TRETURN opt_expression . TSEMI   (rule 67)

    TSEMI	shift, and go to state 130



state 90

    while_st  ->  TWHILE TLPAREN . expression TRPAREN statement   (rule 66)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    expression	go to state 131
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 91

    unary_exp  ->  TINC unary_exp .   (rule 98)

    $default	reduce using rule 98 (unary_exp)



state 92

    unary_exp  ->  TDEC unary_exp .   (rule 99)

    $default	reduce using rule 99 (unary_exp)



state 93

    unary_exp  ->  TSUB unary_exp .   (rule 96)

    $default	reduce using rule 96 (unary_exp)



state 94

    unary_exp  ->  TNOT unary_exp .   (rule 97)

    $default	reduce using rule 97 (unary_exp)



state 95

    primary_exp  ->  TLPAREN expression . TRPAREN   (rule 112)

    TRPAREN	shift, and go to state 132



state 96

    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list TRBRACE .   (rule 38)

    $default	reduce using rule 38 (compound_st)



state 97

    statement_list  ->  statement_list statement .   (rule 55)

    $default	reduce using rule 55 (statement_list)



state 98

    expression_st  ->  opt_expression TSEMI .   (rule 61)

    $default	reduce using rule 61 (expression_st)



state 99

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 77)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    logical_and_exp	go to state 133
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 100

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 79)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    equality_exp	go to state 135
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 101

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 81)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    relational_exp	go to state 136
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 102

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 82)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    relational_exp	go to state 137
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 103

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 86)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    additive_exp	go to state 138
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 104

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 87)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    additive_exp	go to state 139
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 105

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 85)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    additive_exp	go to state 140
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 106

    relational_exp  ->  relational_exp TGREAT . additive_exp   (rule 84)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    additive_exp	go to state 141
    multiplicative_exp	go to state 69
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 107

    additive_exp  ->  additive_exp TADD . multiplicative_exp   (rule 89)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    multiplicative_exp	go to state 142
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 108

    additive_exp  ->  additive_exp TSUB . multiplicative_exp   (rule 90)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    multiplicative_exp	go to state 143
    unary_exp	go to state 134
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 109

    multiplicative_exp  ->  multiplicative_exp TMUL . unary_exp   (rule 92)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    unary_exp	go to state 144
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 110

    multiplicative_exp  ->  multiplicative_exp TDIV . unary_exp   (rule 93)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    unary_exp	go to state 145
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 111

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 94)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    unary_exp	go to state 146
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 112

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 71)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    assignment_exp	go to state 147
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 113

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 72)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    assignment_exp	go to state 148
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 114

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 73)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    assignment_exp	go to state 149
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 115

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 74)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    assignment_exp	go to state 150
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 116

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 75)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    assignment_exp	go to state 151
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 117

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 70)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    assignment_exp	go to state 152
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 118

    postfix_exp  ->  postfix_exp TINC .   (rule 103)

    $default	reduce using rule 103 (postfix_exp)



state 119

    postfix_exp  ->  postfix_exp TDEC .   (rule 104)

    $default	reduce using rule 104 (postfix_exp)



state 120

    postfix_exp  ->  postfix_exp TLPAREN . opt_actual_param TRPAREN   (rule 102)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    $default	reduce using rule 106 (opt_actual_param)

    assignment_exp	go to state 153
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    opt_actual_param	go to state 154
    actual_param	go to state 155
    actual_param_list	go to state 156
    primary_exp	go to state 72



state 121

    postfix_exp  ->  postfix_exp TLBRACKET . expression TRBRACKET   (rule 101)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    expression	go to state 157
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 122

    type_skip_function_list  ->  type_skip_function_list TCOMMA type_skip_function_header .   (rule 12)

    $default	reduce using rule 12 (type_skip_function_list)



state 123

    declarator  ->  TIDENT TLBRACKET opt_number TRBRACKET .   (rule 49)

    $default	reduce using rule 49 (declarator)



state 124

    type_only_param  ->  TLPAREN type_only_param_list TRPAREN .   (rule 17)

    $default	reduce using rule 17 (type_only_param)



state 125

    type_only_param_list  ->  type_only_param_list TCOMMA . type_only_param_dcl   (rule 19)
    type_only_param_list  ->  type_only_param_list TCOMMA . param_dcl   (rule 20)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    type_only_param_dcl	go to state 158
    dcl_specifier	go to state 82
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 159



state 126

    param_dcl  ->  dcl_specifier declarator .   (rule 37)

    $default	reduce using rule 37 (param_dcl)



state 127

    formal_param  ->  TLPAREN opt_formal_param TRPAREN .   (rule 32)

    $default	reduce using rule 32 (formal_param)



state 128

    type_only_param_list  ->  formal_param_list TCOMMA . type_only_param_dcl   (rule 21)
    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 36)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    type_only_param_dcl	go to state 160
    dcl_specifier	go to state 82
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 161



state 129

    if_st  ->  TIF TLPAREN expression . TRPAREN statement   (rule 64)
    if_st  ->  TIF TLPAREN expression . TRPAREN statement TELSE statement   (rule 65)

    TRPAREN	shift, and go to state 162



state 130

    return_st  ->  TRETURN opt_expression TSEMI .   (rule 67)

    $default	reduce using rule 67 (return_st)



state 131

    while_st  ->  TWHILE TLPAREN expression . TRPAREN statement   (rule 66)

    TRPAREN	shift, and go to state 163



state 132

    primary_exp  ->  TLPAREN expression TRPAREN .   (rule 112)

    $default	reduce using rule 112 (primary_exp)



state 133

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 77)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 79)

    TAND	shift, and go to state 100

    $default	reduce using rule 77 (logical_or_exp)



state 134

    multiplicative_exp  ->  unary_exp .   (rule 91)

    $default	reduce using rule 91 (multiplicative_exp)



state 135

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 79)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 81)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 82)

    TEQUAL	shift, and go to state 101
    TNOTEQU	shift, and go to state 102

    $default	reduce using rule 79 (logical_and_exp)



state 136

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 81)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 84)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 85)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 86)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 87)

    TGREATE	shift, and go to state 103
    TLESSE	shift, and go to state 104
    TLESS	shift, and go to state 105
    TGREAT	shift, and go to state 106

    $default	reduce using rule 81 (equality_exp)



state 137

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 82)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 84)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 85)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 86)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 87)

    TGREATE	shift, and go to state 103
    TLESSE	shift, and go to state 104
    TLESS	shift, and go to state 105
    TGREAT	shift, and go to state 106

    $default	reduce using rule 82 (equality_exp)



state 138

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 86)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 89)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 90)

    TADD	shift, and go to state 107
    TSUB	shift, and go to state 108

    $default	reduce using rule 86 (relational_exp)



state 139

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 87)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 89)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 90)

    TADD	shift, and go to state 107
    TSUB	shift, and go to state 108

    $default	reduce using rule 87 (relational_exp)



state 140

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 85)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 89)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 90)

    TADD	shift, and go to state 107
    TSUB	shift, and go to state 108

    $default	reduce using rule 85 (relational_exp)



state 141

    relational_exp  ->  relational_exp TGREAT additive_exp .   (rule 84)
    additive_exp  ->  additive_exp . TADD multiplicative_exp   (rule 89)
    additive_exp  ->  additive_exp . TSUB multiplicative_exp   (rule 90)

    TADD	shift, and go to state 107
    TSUB	shift, and go to state 108

    $default	reduce using rule 84 (relational_exp)



state 142

    additive_exp  ->  additive_exp TADD multiplicative_exp .   (rule 89)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 92)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 93)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 94)

    TMUL	shift, and go to state 109
    TDIV	shift, and go to state 110
    TMOD	shift, and go to state 111

    $default	reduce using rule 89 (additive_exp)



state 143

    additive_exp  ->  additive_exp TSUB multiplicative_exp .   (rule 90)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 92)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 93)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 94)

    TMUL	shift, and go to state 109
    TDIV	shift, and go to state 110
    TMOD	shift, and go to state 111

    $default	reduce using rule 90 (additive_exp)



state 144

    multiplicative_exp  ->  multiplicative_exp TMUL unary_exp .   (rule 92)

    $default	reduce using rule 92 (multiplicative_exp)



state 145

    multiplicative_exp  ->  multiplicative_exp TDIV unary_exp .   (rule 93)

    $default	reduce using rule 93 (multiplicative_exp)



state 146

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 94)

    $default	reduce using rule 94 (multiplicative_exp)



state 147

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 71)

    $default	reduce using rule 71 (assignment_exp)



state 148

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 72)

    $default	reduce using rule 72 (assignment_exp)



state 149

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 73)

    $default	reduce using rule 73 (assignment_exp)



state 150

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 74)

    $default	reduce using rule 74 (assignment_exp)



state 151

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 75)

    $default	reduce using rule 75 (assignment_exp)



state 152

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 70)

    $default	reduce using rule 70 (assignment_exp)



state 153

    actual_param_list  ->  assignment_exp .   (rule 108)

    $default	reduce using rule 108 (actual_param_list)



state 154

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param . TRPAREN   (rule 102)

    TRPAREN	shift, and go to state 164



state 155

    opt_actual_param  ->  actual_param .   (rule 105)

    $default	reduce using rule 105 (opt_actual_param)



state 156

    actual_param  ->  actual_param_list .   (rule 107)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 109)

    TCOMMA	shift, and go to state 165

    $default	reduce using rule 107 (actual_param)



state 157

    postfix_exp  ->  postfix_exp TLBRACKET expression . TRBRACKET   (rule 101)

    TRBRACKET	shift, and go to state 166



state 158

    type_only_param_list  ->  type_only_param_list TCOMMA type_only_param_dcl .   (rule 19)

    $default	reduce using rule 19 (type_only_param_list)



state 159

    type_only_param_list  ->  type_only_param_list TCOMMA param_dcl .   (rule 20)

    $default	reduce using rule 20 (type_only_param_list)



state 160

    type_only_param_list  ->  formal_param_list TCOMMA type_only_param_dcl .   (rule 21)

    $default	reduce using rule 21 (type_only_param_list)



state 161

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 36)

    $default	reduce using rule 36 (formal_param_list)



state 162

    if_st  ->  TIF TLPAREN expression TRPAREN . statement   (rule 64)
    if_st  ->  TIF TLPAREN expression TRPAREN . statement TELSE statement   (rule 65)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TIF 	shift, and go to state 45
    TRETURN	shift, and go to state 46
    TWHILE	shift, and go to state 47
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52
    TLBRACE	shift, and go to state 17

    $default	reduce using rule 63 (opt_expression)

    compound_st	go to state 53
    statement	go to state 167
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 163

    while_st  ->  TWHILE TLPAREN expression TRPAREN . statement   (rule 66)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TIF 	shift, and go to state 45
    TRETURN	shift, and go to state 46
    TWHILE	shift, and go to state 47
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52
    TLBRACE	shift, and go to state 17

    $default	reduce using rule 63 (opt_expression)

    compound_st	go to state 53
    statement	go to state 168
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 164

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param TRPAREN .   (rule 102)

    $default	reduce using rule 102 (postfix_exp)



state 165

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 109)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52

    assignment_exp	go to state 169
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 166

    postfix_exp  ->  postfix_exp TLBRACKET expression TRBRACKET .   (rule 101)

    $default	reduce using rule 101 (postfix_exp)



state 167

    if_st  ->  TIF TLPAREN expression TRPAREN statement .   (rule 64)
    if_st  ->  TIF TLPAREN expression TRPAREN statement . TELSE statement   (rule 65)

    TELSE	shift, and go to state 170

    $default	reduce using rule 64 (if_st)



state 168

    while_st  ->  TWHILE TLPAREN expression TRPAREN statement .   (rule 66)

    $default	reduce using rule 66 (while_st)



state 169

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 109)

    $default	reduce using rule 109 (actual_param_list)



state 170

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE . statement   (rule 65)

    TIDENT	shift, and go to state 43
    TNUMBER	shift, and go to state 44
    TIF 	shift, and go to state 45
    TRETURN	shift, and go to state 46
    TWHILE	shift, and go to state 47
    TINC	shift, and go to state 48
    TDEC	shift, and go to state 49
    TSUB	shift, and go to state 50
    TNOT	shift, and go to state 51
    TLPAREN	shift, and go to state 52
    TLBRACE	shift, and go to state 17

    $default	reduce using rule 63 (opt_expression)

    compound_st	go to state 53
    statement	go to state 171
    expression_st	go to state 57
    opt_expression	go to state 58
    if_st	go to state 59
    while_st	go to state 60
    return_st	go to state 61
    expression	go to state 62
    assignment_exp	go to state 63
    logical_or_exp	go to state 64
    logical_and_exp	go to state 65
    equality_exp	go to state 66
    relational_exp	go to state 67
    additive_exp	go to state 68
    multiplicative_exp	go to state 69
    unary_exp	go to state 70
    postfix_exp	go to state 71
    primary_exp	go to state 72



state 171

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE statement .   (rule 65)

    $default	reduce using rule 65 (if_st)



state 172

    $   	go to state 173



state 173

    $   	go to state 174



state 174

    $default	accept
